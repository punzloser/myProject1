/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 11.0, "minX": 0.0, "maxY": 21792.0, "series": [{"data": [[0.0, 59.0], [0.1, 59.0], [0.2, 59.0], [0.3, 59.0], [0.4, 59.0], [0.5, 59.0], [0.6, 59.0], [0.7, 59.0], [0.8, 59.0], [0.9, 59.0], [1.0, 59.0], [1.1, 59.0], [1.2, 59.0], [1.3, 59.0], [1.4, 59.0], [1.5, 59.0], [1.6, 59.0], [1.7, 59.0], [1.8, 64.0], [1.9, 64.0], [2.0, 64.0], [2.1, 64.0], [2.2, 64.0], [2.3, 64.0], [2.4, 64.0], [2.5, 64.0], [2.6, 64.0], [2.7, 64.0], [2.8, 64.0], [2.9, 64.0], [3.0, 64.0], [3.1, 64.0], [3.2, 64.0], [3.3, 64.0], [3.4, 64.0], [3.5, 64.0], [3.6, 70.0], [3.7, 70.0], [3.8, 70.0], [3.9, 70.0], [4.0, 70.0], [4.1, 70.0], [4.2, 70.0], [4.3, 70.0], [4.4, 70.0], [4.5, 70.0], [4.6, 70.0], [4.7, 70.0], [4.8, 70.0], [4.9, 70.0], [5.0, 70.0], [5.1, 70.0], [5.2, 70.0], [5.3, 70.0], [5.4, 924.0], [5.5, 924.0], [5.6, 924.0], [5.7, 924.0], [5.8, 924.0], [5.9, 924.0], [6.0, 924.0], [6.1, 924.0], [6.2, 924.0], [6.3, 924.0], [6.4, 924.0], [6.5, 924.0], [6.6, 924.0], [6.7, 924.0], [6.8, 924.0], [6.9, 924.0], [7.0, 924.0], [7.1, 924.0], [7.2, 928.0], [7.3, 928.0], [7.4, 928.0], [7.5, 928.0], [7.6, 928.0], [7.7, 928.0], [7.8, 928.0], [7.9, 928.0], [8.0, 928.0], [8.1, 928.0], [8.2, 928.0], [8.3, 928.0], [8.4, 928.0], [8.5, 928.0], [8.6, 928.0], [8.7, 928.0], [8.8, 928.0], [8.9, 928.0], [9.0, 935.0], [9.1, 935.0], [9.2, 935.0], [9.3, 935.0], [9.4, 935.0], [9.5, 935.0], [9.6, 935.0], [9.7, 935.0], [9.8, 935.0], [9.9, 935.0], [10.0, 935.0], [10.1, 935.0], [10.2, 935.0], [10.3, 935.0], [10.4, 935.0], [10.5, 935.0], [10.6, 935.0], [10.7, 935.0], [10.8, 940.0], [10.9, 940.0], [11.0, 940.0], [11.1, 940.0], [11.2, 940.0], [11.3, 940.0], [11.4, 940.0], [11.5, 940.0], [11.6, 940.0], [11.7, 940.0], [11.8, 940.0], [11.9, 940.0], [12.0, 940.0], [12.1, 940.0], [12.2, 940.0], [12.3, 940.0], [12.4, 940.0], [12.5, 940.0], [12.6, 967.0], [12.7, 967.0], [12.8, 967.0], [12.9, 967.0], [13.0, 967.0], [13.1, 967.0], [13.2, 967.0], [13.3, 967.0], [13.4, 967.0], [13.5, 967.0], [13.6, 967.0], [13.7, 967.0], [13.8, 967.0], [13.9, 967.0], [14.0, 967.0], [14.1, 967.0], [14.2, 967.0], [14.3, 975.0], [14.4, 975.0], [14.5, 975.0], [14.6, 975.0], [14.7, 975.0], [14.8, 975.0], [14.9, 975.0], [15.0, 975.0], [15.1, 975.0], [15.2, 975.0], [15.3, 975.0], [15.4, 975.0], [15.5, 975.0], [15.6, 975.0], [15.7, 975.0], [15.8, 975.0], [15.9, 975.0], [16.0, 975.0], [16.1, 975.0], [16.2, 975.0], [16.3, 975.0], [16.4, 975.0], [16.5, 975.0], [16.6, 975.0], [16.7, 975.0], [16.8, 975.0], [16.9, 975.0], [17.0, 975.0], [17.1, 975.0], [17.2, 975.0], [17.3, 975.0], [17.4, 975.0], [17.5, 975.0], [17.6, 975.0], [17.7, 975.0], [17.8, 975.0], [17.9, 988.0], [18.0, 988.0], [18.1, 988.0], [18.2, 988.0], [18.3, 988.0], [18.4, 988.0], [18.5, 988.0], [18.6, 988.0], [18.7, 988.0], [18.8, 988.0], [18.9, 988.0], [19.0, 988.0], [19.1, 988.0], [19.2, 988.0], [19.3, 988.0], [19.4, 988.0], [19.5, 988.0], [19.6, 988.0], [19.7, 1032.0], [19.8, 1032.0], [19.9, 1032.0], [20.0, 1032.0], [20.1, 1032.0], [20.2, 1032.0], [20.3, 1032.0], [20.4, 1032.0], [20.5, 1032.0], [20.6, 1032.0], [20.7, 1032.0], [20.8, 1032.0], [20.9, 1032.0], [21.0, 1032.0], [21.1, 1032.0], [21.2, 1032.0], [21.3, 1032.0], [21.4, 1032.0], [21.5, 1032.0], [21.6, 1032.0], [21.7, 1032.0], [21.8, 1032.0], [21.9, 1032.0], [22.0, 1032.0], [22.1, 1032.0], [22.2, 1032.0], [22.3, 1032.0], [22.4, 1032.0], [22.5, 1032.0], [22.6, 1032.0], [22.7, 1032.0], [22.8, 1032.0], [22.9, 1032.0], [23.0, 1032.0], [23.1, 1032.0], [23.2, 1032.0], [23.3, 1056.0], [23.4, 1056.0], [23.5, 1056.0], [23.6, 1056.0], [23.7, 1056.0], [23.8, 1056.0], [23.9, 1056.0], [24.0, 1056.0], [24.1, 1056.0], [24.2, 1056.0], [24.3, 1056.0], [24.4, 1056.0], [24.5, 1056.0], [24.6, 1056.0], [24.7, 1056.0], [24.8, 1056.0], [24.9, 1056.0], [25.0, 1056.0], [25.1, 1062.0], [25.2, 1062.0], [25.3, 1062.0], [25.4, 1062.0], [25.5, 1062.0], [25.6, 1062.0], [25.7, 1062.0], [25.8, 1062.0], [25.9, 1062.0], [26.0, 1062.0], [26.1, 1062.0], [26.2, 1062.0], [26.3, 1062.0], [26.4, 1062.0], [26.5, 1062.0], [26.6, 1062.0], [26.7, 1062.0], [26.8, 1063.0], [26.9, 1063.0], [27.0, 1063.0], [27.1, 1063.0], [27.2, 1063.0], [27.3, 1063.0], [27.4, 1063.0], [27.5, 1063.0], [27.6, 1063.0], [27.7, 1063.0], [27.8, 1063.0], [27.9, 1063.0], [28.0, 1063.0], [28.1, 1063.0], [28.2, 1063.0], [28.3, 1063.0], [28.4, 1063.0], [28.5, 1063.0], [28.6, 1064.0], [28.7, 1064.0], [28.8, 1064.0], [28.9, 1064.0], [29.0, 1064.0], [29.1, 1064.0], [29.2, 1064.0], [29.3, 1064.0], [29.4, 1064.0], [29.5, 1064.0], [29.6, 1064.0], [29.7, 1064.0], [29.8, 1064.0], [29.9, 1064.0], [30.0, 1064.0], [30.1, 1064.0], [30.2, 1064.0], [30.3, 1064.0], [30.4, 1065.0], [30.5, 1065.0], [30.6, 1065.0], [30.7, 1065.0], [30.8, 1065.0], [30.9, 1065.0], [31.0, 1065.0], [31.1, 1065.0], [31.2, 1065.0], [31.3, 1065.0], [31.4, 1065.0], [31.5, 1065.0], [31.6, 1065.0], [31.7, 1065.0], [31.8, 1065.0], [31.9, 1065.0], [32.0, 1065.0], [32.1, 1065.0], [32.2, 1066.0], [32.3, 1066.0], [32.4, 1066.0], [32.5, 1066.0], [32.6, 1066.0], [32.7, 1066.0], [32.8, 1066.0], [32.9, 1066.0], [33.0, 1066.0], [33.1, 1066.0], [33.2, 1066.0], [33.3, 1066.0], [33.4, 1066.0], [33.5, 1066.0], [33.6, 1066.0], [33.7, 1066.0], [33.8, 1066.0], [33.9, 1066.0], [34.0, 1094.0], [34.1, 1094.0], [34.2, 1094.0], [34.3, 1094.0], [34.4, 1094.0], [34.5, 1094.0], [34.6, 1094.0], [34.7, 1094.0], [34.8, 1094.0], [34.9, 1094.0], [35.0, 1094.0], [35.1, 1094.0], [35.2, 1094.0], [35.3, 1094.0], [35.4, 1094.0], [35.5, 1094.0], [35.6, 1094.0], [35.7, 1094.0], [35.8, 1100.0], [35.9, 1100.0], [36.0, 1100.0], [36.1, 1100.0], [36.2, 1100.0], [36.3, 1100.0], [36.4, 1100.0], [36.5, 1100.0], [36.6, 1100.0], [36.7, 1100.0], [36.8, 1100.0], [36.9, 1100.0], [37.0, 1100.0], [37.1, 1100.0], [37.2, 1100.0], [37.3, 1100.0], [37.4, 1100.0], [37.5, 1107.0], [37.6, 1107.0], [37.7, 1107.0], [37.8, 1107.0], [37.9, 1107.0], [38.0, 1107.0], [38.1, 1107.0], [38.2, 1107.0], [38.3, 1107.0], [38.4, 1107.0], [38.5, 1107.0], [38.6, 1107.0], [38.7, 1107.0], [38.8, 1107.0], [38.9, 1107.0], [39.0, 1107.0], [39.1, 1107.0], [39.2, 1107.0], [39.3, 3027.0], [39.4, 3027.0], [39.5, 3027.0], [39.6, 3027.0], [39.7, 3027.0], [39.8, 3027.0], [39.9, 3027.0], [40.0, 3027.0], [40.1, 3027.0], [40.2, 3027.0], [40.3, 3027.0], [40.4, 3027.0], [40.5, 3027.0], [40.6, 3027.0], [40.7, 3027.0], [40.8, 3027.0], [40.9, 3027.0], [41.0, 3027.0], [41.1, 3029.0], [41.2, 3029.0], [41.3, 3029.0], [41.4, 3029.0], [41.5, 3029.0], [41.6, 3029.0], [41.7, 3029.0], [41.8, 3029.0], [41.9, 3029.0], [42.0, 3029.0], [42.1, 3029.0], [42.2, 3029.0], [42.3, 3029.0], [42.4, 3029.0], [42.5, 3029.0], [42.6, 3029.0], [42.7, 3029.0], [42.8, 3029.0], [42.9, 3030.0], [43.0, 3030.0], [43.1, 3030.0], [43.2, 3030.0], [43.3, 3030.0], [43.4, 3030.0], [43.5, 3030.0], [43.6, 3030.0], [43.7, 3030.0], [43.8, 3030.0], [43.9, 3030.0], [44.0, 3030.0], [44.1, 3030.0], [44.2, 3030.0], [44.3, 3030.0], [44.4, 3030.0], [44.5, 3030.0], [44.6, 3030.0], [44.7, 3031.0], [44.8, 3031.0], [44.9, 3031.0], [45.0, 3031.0], [45.1, 3031.0], [45.2, 3031.0], [45.3, 3031.0], [45.4, 3031.0], [45.5, 3031.0], [45.6, 3031.0], [45.7, 3031.0], [45.8, 3031.0], [45.9, 3031.0], [46.0, 3031.0], [46.1, 3031.0], [46.2, 3031.0], [46.3, 3031.0], [46.4, 3031.0], [46.5, 3031.0], [46.6, 3031.0], [46.7, 3031.0], [46.8, 3031.0], [46.9, 3031.0], [47.0, 3031.0], [47.1, 3031.0], [47.2, 3031.0], [47.3, 3031.0], [47.4, 3031.0], [47.5, 3031.0], [47.6, 3031.0], [47.7, 3031.0], [47.8, 3031.0], [47.9, 3031.0], [48.0, 3031.0], [48.1, 3031.0], [48.2, 3031.0], [48.3, 3035.0], [48.4, 3035.0], [48.5, 3035.0], [48.6, 3035.0], [48.7, 3035.0], [48.8, 3035.0], [48.9, 3035.0], [49.0, 3035.0], [49.1, 3035.0], [49.2, 3035.0], [49.3, 3035.0], [49.4, 3035.0], [49.5, 3035.0], [49.6, 3035.0], [49.7, 3035.0], [49.8, 3035.0], [49.9, 3035.0], [50.0, 3041.0], [50.1, 3041.0], [50.2, 3041.0], [50.3, 3041.0], [50.4, 3041.0], [50.5, 3041.0], [50.6, 3041.0], [50.7, 3041.0], [50.8, 3041.0], [50.9, 3041.0], [51.0, 3041.0], [51.1, 3041.0], [51.2, 3041.0], [51.3, 3041.0], [51.4, 3041.0], [51.5, 3041.0], [51.6, 3041.0], [51.7, 3041.0], [51.8, 3044.0], [51.9, 3044.0], [52.0, 3044.0], [52.1, 3044.0], [52.2, 3044.0], [52.3, 3044.0], [52.4, 3044.0], [52.5, 3044.0], [52.6, 3044.0], [52.7, 3044.0], [52.8, 3044.0], [52.9, 3044.0], [53.0, 3044.0], [53.1, 3044.0], [53.2, 3044.0], [53.3, 3044.0], [53.4, 3044.0], [53.5, 3044.0], [53.6, 3054.0], [53.7, 3054.0], [53.8, 3054.0], [53.9, 3054.0], [54.0, 3054.0], [54.1, 3054.0], [54.2, 3054.0], [54.3, 3054.0], [54.4, 3054.0], [54.5, 3054.0], [54.6, 3054.0], [54.7, 3054.0], [54.8, 3054.0], [54.9, 3054.0], [55.0, 3054.0], [55.1, 3054.0], [55.2, 3054.0], [55.3, 3054.0], [55.4, 3056.0], [55.5, 3056.0], [55.6, 3056.0], [55.7, 3056.0], [55.8, 3056.0], [55.9, 3056.0], [56.0, 3056.0], [56.1, 3056.0], [56.2, 3056.0], [56.3, 3056.0], [56.4, 3056.0], [56.5, 3056.0], [56.6, 3056.0], [56.7, 3056.0], [56.8, 3056.0], [56.9, 3056.0], [57.0, 3056.0], [57.1, 3056.0], [57.2, 3062.0], [57.3, 3062.0], [57.4, 3062.0], [57.5, 3062.0], [57.6, 3062.0], [57.7, 3062.0], [57.8, 3062.0], [57.9, 3062.0], [58.0, 3062.0], [58.1, 3062.0], [58.2, 3062.0], [58.3, 3062.0], [58.4, 3062.0], [58.5, 3062.0], [58.6, 3062.0], [58.7, 3062.0], [58.8, 3062.0], [58.9, 3062.0], [59.0, 3087.0], [59.1, 3087.0], [59.2, 3087.0], [59.3, 3087.0], [59.4, 3087.0], [59.5, 3087.0], [59.6, 3087.0], [59.7, 3087.0], [59.8, 3087.0], [59.9, 3087.0], [60.0, 3087.0], [60.1, 3087.0], [60.2, 3087.0], [60.3, 3087.0], [60.4, 3087.0], [60.5, 3087.0], [60.6, 3087.0], [60.7, 3087.0], [60.8, 3118.0], [60.9, 3118.0], [61.0, 3118.0], [61.1, 3118.0], [61.2, 3118.0], [61.3, 3118.0], [61.4, 3118.0], [61.5, 3118.0], [61.6, 3118.0], [61.7, 3118.0], [61.8, 3118.0], [61.9, 3118.0], [62.0, 3118.0], [62.1, 3118.0], [62.2, 3118.0], [62.3, 3118.0], [62.4, 3118.0], [62.5, 6096.0], [62.6, 6096.0], [62.7, 6096.0], [62.8, 6096.0], [62.9, 6096.0], [63.0, 6096.0], [63.1, 6096.0], [63.2, 6096.0], [63.3, 6096.0], [63.4, 6096.0], [63.5, 6096.0], [63.6, 6096.0], [63.7, 6096.0], [63.8, 6096.0], [63.9, 6096.0], [64.0, 6096.0], [64.1, 6096.0], [64.2, 6096.0], [64.3, 6097.0], [64.4, 6097.0], [64.5, 6097.0], [64.6, 6097.0], [64.7, 6097.0], [64.8, 6097.0], [64.9, 6097.0], [65.0, 6097.0], [65.1, 6097.0], [65.2, 6097.0], [65.3, 6097.0], [65.4, 6097.0], [65.5, 6097.0], [65.6, 6097.0], [65.7, 6097.0], [65.8, 6097.0], [65.9, 6097.0], [66.0, 6097.0], [66.1, 6098.0], [66.2, 6098.0], [66.3, 6098.0], [66.4, 6098.0], [66.5, 6098.0], [66.6, 6098.0], [66.7, 6098.0], [66.8, 6098.0], [66.9, 6098.0], [67.0, 6098.0], [67.1, 6098.0], [67.2, 6098.0], [67.3, 6098.0], [67.4, 6098.0], [67.5, 6098.0], [67.6, 6098.0], [67.7, 6098.0], [67.8, 6098.0], [67.9, 6099.0], [68.0, 6099.0], [68.1, 6099.0], [68.2, 6099.0], [68.3, 6099.0], [68.4, 6099.0], [68.5, 6099.0], [68.6, 6099.0], [68.7, 6099.0], [68.8, 6099.0], [68.9, 6099.0], [69.0, 6099.0], [69.1, 6099.0], [69.2, 6099.0], [69.3, 6099.0], [69.4, 6099.0], [69.5, 6099.0], [69.6, 6099.0], [69.7, 6099.0], [69.8, 6099.0], [69.9, 6099.0], [70.0, 6099.0], [70.1, 6099.0], [70.2, 6099.0], [70.3, 6099.0], [70.4, 6099.0], [70.5, 6099.0], [70.6, 6099.0], [70.7, 6099.0], [70.8, 6099.0], [70.9, 6099.0], [71.0, 6099.0], [71.1, 6099.0], [71.2, 6099.0], [71.3, 6099.0], [71.4, 6099.0], [71.5, 6100.0], [71.6, 6100.0], [71.7, 6100.0], [71.8, 6100.0], [71.9, 6100.0], [72.0, 6100.0], [72.1, 6100.0], [72.2, 6100.0], [72.3, 6100.0], [72.4, 6100.0], [72.5, 6100.0], [72.6, 6100.0], [72.7, 6100.0], [72.8, 6100.0], [72.9, 6100.0], [73.0, 6100.0], [73.1, 6100.0], [73.2, 6100.0], [73.3, 6101.0], [73.4, 6101.0], [73.5, 6101.0], [73.6, 6101.0], [73.7, 6101.0], [73.8, 6101.0], [73.9, 6101.0], [74.0, 6101.0], [74.1, 6101.0], [74.2, 6101.0], [74.3, 6101.0], [74.4, 6101.0], [74.5, 6101.0], [74.6, 6101.0], [74.7, 6101.0], [74.8, 6101.0], [74.9, 6101.0], [75.0, 6101.0], [75.1, 9074.0], [75.2, 9074.0], [75.3, 9074.0], [75.4, 9074.0], [75.5, 9074.0], [75.6, 9074.0], [75.7, 9074.0], [75.8, 9074.0], [75.9, 9074.0], [76.0, 9074.0], [76.1, 9074.0], [76.2, 9074.0], [76.3, 9074.0], [76.4, 9074.0], [76.5, 9074.0], [76.6, 9074.0], [76.7, 9074.0], [76.8, 9083.0], [76.9, 9083.0], [77.0, 9083.0], [77.1, 9083.0], [77.2, 9083.0], [77.3, 9083.0], [77.4, 9083.0], [77.5, 9083.0], [77.6, 9083.0], [77.7, 9083.0], [77.8, 9083.0], [77.9, 9083.0], [78.0, 9083.0], [78.1, 9083.0], [78.2, 9083.0], [78.3, 9083.0], [78.4, 9083.0], [78.5, 9083.0], [78.6, 9087.0], [78.7, 9087.0], [78.8, 9087.0], [78.9, 9087.0], [79.0, 9087.0], [79.1, 9087.0], [79.2, 9087.0], [79.3, 9087.0], [79.4, 9087.0], [79.5, 9087.0], [79.6, 9087.0], [79.7, 9087.0], [79.8, 9087.0], [79.9, 9087.0], [80.0, 9087.0], [80.1, 9087.0], [80.2, 9087.0], [80.3, 9087.0], [80.4, 9089.0], [80.5, 9089.0], [80.6, 9089.0], [80.7, 9089.0], [80.8, 9089.0], [80.9, 9089.0], [81.0, 9089.0], [81.1, 9089.0], [81.2, 9089.0], [81.3, 9089.0], [81.4, 9089.0], [81.5, 9089.0], [81.6, 9089.0], [81.7, 9089.0], [81.8, 9089.0], [81.9, 9089.0], [82.0, 9089.0], [82.1, 9089.0], [82.2, 9091.0], [82.3, 9091.0], [82.4, 9091.0], [82.5, 9091.0], [82.6, 9091.0], [82.7, 9091.0], [82.8, 9091.0], [82.9, 9091.0], [83.0, 9091.0], [83.1, 9091.0], [83.2, 9091.0], [83.3, 9091.0], [83.4, 9091.0], [83.5, 9091.0], [83.6, 9091.0], [83.7, 9091.0], [83.8, 9091.0], [83.9, 9091.0], [84.0, 9094.0], [84.1, 9094.0], [84.2, 9094.0], [84.3, 9094.0], [84.4, 9094.0], [84.5, 9094.0], [84.6, 9094.0], [84.7, 9094.0], [84.8, 9094.0], [84.9, 9094.0], [85.0, 9094.0], [85.1, 9094.0], [85.2, 9094.0], [85.3, 9094.0], [85.4, 9094.0], [85.5, 9094.0], [85.6, 9094.0], [85.7, 9094.0], [85.8, 9094.0], [85.9, 9094.0], [86.0, 9094.0], [86.1, 9094.0], [86.2, 9094.0], [86.3, 9094.0], [86.4, 9094.0], [86.5, 9094.0], [86.6, 9094.0], [86.7, 9094.0], [86.8, 9094.0], [86.9, 9094.0], [87.0, 9094.0], [87.1, 9094.0], [87.2, 9094.0], [87.3, 9094.0], [87.4, 9094.0], [87.5, 9094.0], [87.6, 9094.0], [87.7, 9094.0], [87.8, 9094.0], [87.9, 9094.0], [88.0, 9094.0], [88.1, 9094.0], [88.2, 9094.0], [88.3, 9094.0], [88.4, 9094.0], [88.5, 9094.0], [88.6, 9094.0], [88.7, 9094.0], [88.8, 9094.0], [88.9, 9094.0], [89.0, 9094.0], [89.1, 9094.0], [89.2, 9094.0], [89.3, 9098.0], [89.4, 9098.0], [89.5, 9098.0], [89.6, 9098.0], [89.7, 9098.0], [89.8, 9098.0], [89.9, 9098.0], [90.0, 9098.0], [90.1, 9098.0], [90.2, 9098.0], [90.3, 9098.0], [90.4, 9098.0], [90.5, 9098.0], [90.6, 9098.0], [90.7, 9098.0], [90.8, 9098.0], [90.9, 9098.0], [91.0, 9098.0], [91.1, 9101.0], [91.2, 9101.0], [91.3, 9101.0], [91.4, 9101.0], [91.5, 9101.0], [91.6, 9101.0], [91.7, 9101.0], [91.8, 9101.0], [91.9, 9101.0], [92.0, 9101.0], [92.1, 9101.0], [92.2, 9101.0], [92.3, 9101.0], [92.4, 9101.0], [92.5, 9101.0], [92.6, 9101.0], [92.7, 9101.0], [92.8, 9101.0], [92.9, 9103.0], [93.0, 9103.0], [93.1, 9103.0], [93.2, 9103.0], [93.3, 9103.0], [93.4, 9103.0], [93.5, 9103.0], [93.6, 9103.0], [93.7, 9103.0], [93.8, 9103.0], [93.9, 9103.0], [94.0, 9103.0], [94.1, 9103.0], [94.2, 9103.0], [94.3, 9103.0], [94.4, 9103.0], [94.5, 9103.0], [94.6, 9103.0], [94.7, 9107.0], [94.8, 9107.0], [94.9, 9107.0], [95.0, 9107.0], [95.1, 9107.0], [95.2, 9107.0], [95.3, 9107.0], [95.4, 9107.0], [95.5, 9107.0], [95.6, 9107.0], [95.7, 9107.0], [95.8, 9107.0], [95.9, 9107.0], [96.0, 9107.0], [96.1, 9107.0], [96.2, 9107.0], [96.3, 9107.0], [96.4, 9107.0], [96.5, 9108.0], [96.6, 9108.0], [96.7, 9108.0], [96.8, 9108.0], [96.9, 9108.0], [97.0, 9108.0], [97.1, 9108.0], [97.2, 9108.0], [97.3, 9108.0], [97.4, 9108.0], [97.5, 9108.0], [97.6, 9108.0], [97.7, 9108.0], [97.8, 9108.0], [97.9, 9108.0], [98.0, 9108.0], [98.1, 9108.0], [98.2, 9108.0], [98.3, 9110.0], [98.4, 9110.0], [98.5, 9110.0], [98.6, 9110.0], [98.7, 9110.0], [98.8, 9110.0], [98.9, 9110.0], [99.0, 9110.0], [99.1, 9110.0], [99.2, 9110.0], [99.3, 9110.0], [99.4, 9110.0], [99.5, 9110.0], [99.6, 9110.0], [99.7, 9110.0], [99.8, 9110.0], [99.9, 9110.0], [100.0, 9110.0]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-0", "isController": false}, {"data": [[0.0, 27.0], [0.1, 27.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 27.0], [1.9, 27.0], [2.0, 27.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 27.0], [2.5, 27.0], [2.6, 27.0], [2.7, 27.0], [2.8, 27.0], [2.9, 27.0], [3.0, 27.0], [3.1, 27.0], [3.2, 27.0], [3.3, 27.0], [3.4, 27.0], [3.5, 27.0], [3.6, 33.0], [3.7, 33.0], [3.8, 33.0], [3.9, 33.0], [4.0, 33.0], [4.1, 33.0], [4.2, 33.0], [4.3, 33.0], [4.4, 33.0], [4.5, 33.0], [4.6, 33.0], [4.7, 33.0], [4.8, 33.0], [4.9, 33.0], [5.0, 33.0], [5.1, 33.0], [5.2, 33.0], [5.3, 33.0], [5.4, 34.0], [5.5, 34.0], [5.6, 34.0], [5.7, 34.0], [5.8, 34.0], [5.9, 34.0], [6.0, 34.0], [6.1, 34.0], [6.2, 34.0], [6.3, 34.0], [6.4, 34.0], [6.5, 34.0], [6.6, 34.0], [6.7, 34.0], [6.8, 34.0], [6.9, 34.0], [7.0, 34.0], [7.1, 34.0], [7.2, 35.0], [7.3, 35.0], [7.4, 35.0], [7.5, 35.0], [7.6, 35.0], [7.7, 35.0], [7.8, 35.0], [7.9, 35.0], [8.0, 35.0], [8.1, 35.0], [8.2, 35.0], [8.3, 35.0], [8.4, 35.0], [8.5, 35.0], [8.6, 35.0], [8.7, 35.0], [8.8, 35.0], [8.9, 35.0], [9.0, 36.0], [9.1, 36.0], [9.2, 36.0], [9.3, 36.0], [9.4, 36.0], [9.5, 36.0], [9.6, 36.0], [9.7, 36.0], [9.8, 36.0], [9.9, 36.0], [10.0, 36.0], [10.1, 36.0], [10.2, 36.0], [10.3, 36.0], [10.4, 36.0], [10.5, 36.0], [10.6, 36.0], [10.7, 36.0], [10.8, 37.0], [10.9, 37.0], [11.0, 37.0], [11.1, 37.0], [11.2, 37.0], [11.3, 37.0], [11.4, 37.0], [11.5, 37.0], [11.6, 37.0], [11.7, 37.0], [11.8, 37.0], [11.9, 37.0], [12.0, 37.0], [12.1, 37.0], [12.2, 37.0], [12.3, 37.0], [12.4, 37.0], [12.5, 37.0], [12.6, 39.0], [12.7, 39.0], [12.8, 39.0], [12.9, 39.0], [13.0, 39.0], [13.1, 39.0], [13.2, 39.0], [13.3, 39.0], [13.4, 39.0], [13.5, 39.0], [13.6, 39.0], [13.7, 39.0], [13.8, 39.0], [13.9, 39.0], [14.0, 39.0], [14.1, 39.0], [14.2, 39.0], [14.3, 39.0], [14.4, 39.0], [14.5, 39.0], [14.6, 39.0], [14.7, 39.0], [14.8, 39.0], [14.9, 39.0], [15.0, 39.0], [15.1, 39.0], [15.2, 39.0], [15.3, 39.0], [15.4, 39.0], [15.5, 39.0], [15.6, 39.0], [15.7, 39.0], [15.8, 39.0], [15.9, 39.0], [16.0, 39.0], [16.1, 39.0], [16.2, 39.0], [16.3, 39.0], [16.4, 39.0], [16.5, 39.0], [16.6, 39.0], [16.7, 39.0], [16.8, 39.0], [16.9, 39.0], [17.0, 39.0], [17.1, 39.0], [17.2, 39.0], [17.3, 39.0], [17.4, 39.0], [17.5, 39.0], [17.6, 39.0], [17.7, 39.0], [17.8, 39.0], [17.9, 42.0], [18.0, 42.0], [18.1, 42.0], [18.2, 42.0], [18.3, 42.0], [18.4, 42.0], [18.5, 42.0], [18.6, 42.0], [18.7, 42.0], [18.8, 42.0], [18.9, 42.0], [19.0, 42.0], [19.1, 42.0], [19.2, 42.0], [19.3, 42.0], [19.4, 42.0], [19.5, 42.0], [19.6, 42.0], [19.7, 43.0], [19.8, 43.0], [19.9, 43.0], [20.0, 43.0], [20.1, 43.0], [20.2, 43.0], [20.3, 43.0], [20.4, 43.0], [20.5, 43.0], [20.6, 43.0], [20.7, 43.0], [20.8, 43.0], [20.9, 43.0], [21.0, 43.0], [21.1, 43.0], [21.2, 43.0], [21.3, 43.0], [21.4, 43.0], [21.5, 43.0], [21.6, 43.0], [21.7, 43.0], [21.8, 43.0], [21.9, 43.0], [22.0, 43.0], [22.1, 43.0], [22.2, 43.0], [22.3, 43.0], [22.4, 43.0], [22.5, 43.0], [22.6, 43.0], [22.7, 43.0], [22.8, 43.0], [22.9, 43.0], [23.0, 43.0], [23.1, 43.0], [23.2, 43.0], [23.3, 43.0], [23.4, 43.0], [23.5, 43.0], [23.6, 43.0], [23.7, 43.0], [23.8, 43.0], [23.9, 43.0], [24.0, 43.0], [24.1, 43.0], [24.2, 43.0], [24.3, 43.0], [24.4, 43.0], [24.5, 43.0], [24.6, 43.0], [24.7, 43.0], [24.8, 43.0], [24.9, 43.0], [25.0, 44.0], [25.1, 44.0], [25.2, 44.0], [25.3, 44.0], [25.4, 44.0], [25.5, 44.0], [25.6, 44.0], [25.7, 44.0], [25.8, 44.0], [25.9, 44.0], [26.0, 44.0], [26.1, 44.0], [26.2, 44.0], [26.3, 44.0], [26.4, 44.0], [26.5, 44.0], [26.6, 44.0], [26.7, 44.0], [26.8, 44.0], [26.9, 44.0], [27.0, 44.0], [27.1, 44.0], [27.2, 44.0], [27.3, 44.0], [27.4, 44.0], [27.5, 44.0], [27.6, 44.0], [27.7, 44.0], [27.8, 44.0], [27.9, 44.0], [28.0, 44.0], [28.1, 44.0], [28.2, 44.0], [28.3, 44.0], [28.4, 44.0], [28.5, 44.0], [28.6, 44.0], [28.7, 44.0], [28.8, 44.0], [28.9, 44.0], [29.0, 44.0], [29.1, 44.0], [29.2, 44.0], [29.3, 44.0], [29.4, 44.0], [29.5, 44.0], [29.6, 44.0], [29.7, 44.0], [29.8, 44.0], [29.9, 44.0], [30.0, 44.0], [30.1, 44.0], [30.2, 44.0], [30.3, 44.0], [30.4, 45.0], [30.5, 45.0], [30.6, 45.0], [30.7, 45.0], [30.8, 45.0], [30.9, 45.0], [31.0, 45.0], [31.1, 45.0], [31.2, 45.0], [31.3, 45.0], [31.4, 45.0], [31.5, 45.0], [31.6, 45.0], [31.7, 45.0], [31.8, 45.0], [31.9, 45.0], [32.0, 45.0], [32.1, 45.0], [32.2, 47.0], [32.3, 47.0], [32.4, 47.0], [32.5, 47.0], [32.6, 47.0], [32.7, 47.0], [32.8, 47.0], [32.9, 47.0], [33.0, 47.0], [33.1, 47.0], [33.2, 47.0], [33.3, 47.0], [33.4, 47.0], [33.5, 47.0], [33.6, 47.0], [33.7, 47.0], [33.8, 47.0], [33.9, 47.0], [34.0, 47.0], [34.1, 47.0], [34.2, 47.0], [34.3, 47.0], [34.4, 47.0], [34.5, 47.0], [34.6, 47.0], [34.7, 47.0], [34.8, 47.0], [34.9, 47.0], [35.0, 47.0], [35.1, 47.0], [35.2, 47.0], [35.3, 47.0], [35.4, 47.0], [35.5, 47.0], [35.6, 47.0], [35.7, 47.0], [35.8, 48.0], [35.9, 48.0], [36.0, 48.0], [36.1, 48.0], [36.2, 48.0], [36.3, 48.0], [36.4, 48.0], [36.5, 48.0], [36.6, 48.0], [36.7, 48.0], [36.8, 48.0], [36.9, 48.0], [37.0, 48.0], [37.1, 48.0], [37.2, 48.0], [37.3, 48.0], [37.4, 48.0], [37.5, 48.0], [37.6, 48.0], [37.7, 48.0], [37.8, 48.0], [37.9, 48.0], [38.0, 48.0], [38.1, 48.0], [38.2, 48.0], [38.3, 48.0], [38.4, 48.0], [38.5, 48.0], [38.6, 48.0], [38.7, 48.0], [38.8, 48.0], [38.9, 48.0], [39.0, 48.0], [39.1, 48.0], [39.2, 48.0], [39.3, 48.0], [39.4, 48.0], [39.5, 48.0], [39.6, 48.0], [39.7, 48.0], [39.8, 48.0], [39.9, 48.0], [40.0, 48.0], [40.1, 48.0], [40.2, 48.0], [40.3, 48.0], [40.4, 48.0], [40.5, 48.0], [40.6, 48.0], [40.7, 48.0], [40.8, 48.0], [40.9, 48.0], [41.0, 48.0], [41.1, 48.0], [41.2, 48.0], [41.3, 48.0], [41.4, 48.0], [41.5, 48.0], [41.6, 48.0], [41.7, 48.0], [41.8, 48.0], [41.9, 48.0], [42.0, 48.0], [42.1, 48.0], [42.2, 48.0], [42.3, 48.0], [42.4, 48.0], [42.5, 48.0], [42.6, 48.0], [42.7, 48.0], [42.8, 48.0], [42.9, 49.0], [43.0, 49.0], [43.1, 49.0], [43.2, 49.0], [43.3, 49.0], [43.4, 49.0], [43.5, 49.0], [43.6, 49.0], [43.7, 49.0], [43.8, 49.0], [43.9, 49.0], [44.0, 49.0], [44.1, 49.0], [44.2, 49.0], [44.3, 49.0], [44.4, 49.0], [44.5, 49.0], [44.6, 49.0], [44.7, 49.0], [44.8, 49.0], [44.9, 49.0], [45.0, 49.0], [45.1, 49.0], [45.2, 49.0], [45.3, 49.0], [45.4, 49.0], [45.5, 49.0], [45.6, 49.0], [45.7, 49.0], [45.8, 49.0], [45.9, 49.0], [46.0, 49.0], [46.1, 49.0], [46.2, 49.0], [46.3, 49.0], [46.4, 49.0], [46.5, 51.0], [46.6, 51.0], [46.7, 51.0], [46.8, 51.0], [46.9, 51.0], [47.0, 51.0], [47.1, 51.0], [47.2, 51.0], [47.3, 51.0], [47.4, 51.0], [47.5, 51.0], [47.6, 51.0], [47.7, 51.0], [47.8, 51.0], [47.9, 51.0], [48.0, 51.0], [48.1, 51.0], [48.2, 51.0], [48.3, 52.0], [48.4, 52.0], [48.5, 52.0], [48.6, 52.0], [48.7, 52.0], [48.8, 52.0], [48.9, 52.0], [49.0, 52.0], [49.1, 52.0], [49.2, 52.0], [49.3, 52.0], [49.4, 52.0], [49.5, 52.0], [49.6, 52.0], [49.7, 52.0], [49.8, 52.0], [49.9, 52.0], [50.0, 52.0], [50.1, 52.0], [50.2, 52.0], [50.3, 52.0], [50.4, 52.0], [50.5, 52.0], [50.6, 52.0], [50.7, 52.0], [50.8, 52.0], [50.9, 52.0], [51.0, 52.0], [51.1, 52.0], [51.2, 52.0], [51.3, 52.0], [51.4, 52.0], [51.5, 52.0], [51.6, 52.0], [51.7, 52.0], [51.8, 53.0], [51.9, 53.0], [52.0, 53.0], [52.1, 53.0], [52.2, 53.0], [52.3, 53.0], [52.4, 53.0], [52.5, 53.0], [52.6, 53.0], [52.7, 53.0], [52.8, 53.0], [52.9, 53.0], [53.0, 53.0], [53.1, 53.0], [53.2, 53.0], [53.3, 53.0], [53.4, 53.0], [53.5, 53.0], [53.6, 54.0], [53.7, 54.0], [53.8, 54.0], [53.9, 54.0], [54.0, 54.0], [54.1, 54.0], [54.2, 54.0], [54.3, 54.0], [54.4, 54.0], [54.5, 54.0], [54.6, 54.0], [54.7, 54.0], [54.8, 54.0], [54.9, 54.0], [55.0, 54.0], [55.1, 54.0], [55.2, 54.0], [55.3, 54.0], [55.4, 54.0], [55.5, 54.0], [55.6, 54.0], [55.7, 54.0], [55.8, 54.0], [55.9, 54.0], [56.0, 54.0], [56.1, 54.0], [56.2, 54.0], [56.3, 54.0], [56.4, 54.0], [56.5, 54.0], [56.6, 54.0], [56.7, 54.0], [56.8, 54.0], [56.9, 54.0], [57.0, 54.0], [57.1, 54.0], [57.2, 55.0], [57.3, 55.0], [57.4, 55.0], [57.5, 55.0], [57.6, 55.0], [57.7, 55.0], [57.8, 55.0], [57.9, 55.0], [58.0, 55.0], [58.1, 55.0], [58.2, 55.0], [58.3, 55.0], [58.4, 55.0], [58.5, 55.0], [58.6, 55.0], [58.7, 55.0], [58.8, 55.0], [58.9, 55.0], [59.0, 56.0], [59.1, 56.0], [59.2, 56.0], [59.3, 56.0], [59.4, 56.0], [59.5, 56.0], [59.6, 56.0], [59.7, 56.0], [59.8, 56.0], [59.9, 56.0], [60.0, 56.0], [60.1, 56.0], [60.2, 56.0], [60.3, 56.0], [60.4, 56.0], [60.5, 56.0], [60.6, 56.0], [60.7, 56.0], [60.8, 59.0], [60.9, 59.0], [61.0, 59.0], [61.1, 59.0], [61.2, 59.0], [61.3, 59.0], [61.4, 59.0], [61.5, 59.0], [61.6, 59.0], [61.7, 59.0], [61.8, 59.0], [61.9, 59.0], [62.0, 59.0], [62.1, 59.0], [62.2, 59.0], [62.3, 59.0], [62.4, 59.0], [62.5, 60.0], [62.6, 60.0], [62.7, 60.0], [62.8, 60.0], [62.9, 60.0], [63.0, 60.0], [63.1, 60.0], [63.2, 60.0], [63.3, 60.0], [63.4, 60.0], [63.5, 60.0], [63.6, 60.0], [63.7, 60.0], [63.8, 60.0], [63.9, 60.0], [64.0, 60.0], [64.1, 60.0], [64.2, 60.0], [64.3, 61.0], [64.4, 61.0], [64.5, 61.0], [64.6, 61.0], [64.7, 61.0], [64.8, 61.0], [64.9, 61.0], [65.0, 61.0], [65.1, 61.0], [65.2, 61.0], [65.3, 61.0], [65.4, 61.0], [65.5, 61.0], [65.6, 61.0], [65.7, 61.0], [65.8, 61.0], [65.9, 61.0], [66.0, 61.0], [66.1, 69.0], [66.2, 69.0], [66.3, 69.0], [66.4, 69.0], [66.5, 69.0], [66.6, 69.0], [66.7, 69.0], [66.8, 69.0], [66.9, 69.0], [67.0, 69.0], [67.1, 69.0], [67.2, 69.0], [67.3, 69.0], [67.4, 69.0], [67.5, 69.0], [67.6, 69.0], [67.7, 69.0], [67.8, 69.0], [67.9, 69.0], [68.0, 69.0], [68.1, 69.0], [68.2, 69.0], [68.3, 69.0], [68.4, 69.0], [68.5, 69.0], [68.6, 69.0], [68.7, 69.0], [68.8, 69.0], [68.9, 69.0], [69.0, 69.0], [69.1, 69.0], [69.2, 69.0], [69.3, 69.0], [69.4, 69.0], [69.5, 69.0], [69.6, 69.0], [69.7, 69.0], [69.8, 69.0], [69.9, 69.0], [70.0, 69.0], [70.1, 69.0], [70.2, 69.0], [70.3, 69.0], [70.4, 69.0], [70.5, 69.0], [70.6, 69.0], [70.7, 69.0], [70.8, 69.0], [70.9, 69.0], [71.0, 69.0], [71.1, 69.0], [71.2, 69.0], [71.3, 69.0], [71.4, 69.0], [71.5, 69.0], [71.6, 69.0], [71.7, 69.0], [71.8, 69.0], [71.9, 69.0], [72.0, 69.0], [72.1, 69.0], [72.2, 69.0], [72.3, 69.0], [72.4, 69.0], [72.5, 69.0], [72.6, 69.0], [72.7, 69.0], [72.8, 69.0], [72.9, 69.0], [73.0, 69.0], [73.1, 69.0], [73.2, 69.0], [73.3, 70.0], [73.4, 70.0], [73.5, 70.0], [73.6, 70.0], [73.7, 70.0], [73.8, 70.0], [73.9, 70.0], [74.0, 70.0], [74.1, 70.0], [74.2, 70.0], [74.3, 70.0], [74.4, 70.0], [74.5, 70.0], [74.6, 70.0], [74.7, 70.0], [74.8, 70.0], [74.9, 70.0], [75.0, 83.0], [75.1, 83.0], [75.2, 83.0], [75.3, 83.0], [75.4, 83.0], [75.5, 83.0], [75.6, 83.0], [75.7, 83.0], [75.8, 83.0], [75.9, 83.0], [76.0, 83.0], [76.1, 83.0], [76.2, 83.0], [76.3, 83.0], [76.4, 83.0], [76.5, 83.0], [76.6, 83.0], [76.7, 83.0], [76.8, 93.0], [76.9, 93.0], [77.0, 93.0], [77.1, 93.0], [77.2, 93.0], [77.3, 93.0], [77.4, 93.0], [77.5, 93.0], [77.6, 93.0], [77.7, 93.0], [77.8, 93.0], [77.9, 93.0], [78.0, 93.0], [78.1, 93.0], [78.2, 93.0], [78.3, 93.0], [78.4, 93.0], [78.5, 93.0], [78.6, 106.0], [78.7, 106.0], [78.8, 106.0], [78.9, 106.0], [79.0, 106.0], [79.1, 106.0], [79.2, 106.0], [79.3, 106.0], [79.4, 106.0], [79.5, 106.0], [79.6, 106.0], [79.7, 106.0], [79.8, 106.0], [79.9, 106.0], [80.0, 106.0], [80.1, 106.0], [80.2, 106.0], [80.3, 106.0], [80.4, 120.0], [80.5, 120.0], [80.6, 120.0], [80.7, 120.0], [80.8, 120.0], [80.9, 120.0], [81.0, 120.0], [81.1, 120.0], [81.2, 120.0], [81.3, 120.0], [81.4, 120.0], [81.5, 120.0], [81.6, 120.0], [81.7, 120.0], [81.8, 120.0], [81.9, 120.0], [82.0, 120.0], [82.1, 120.0], [82.2, 137.0], [82.3, 137.0], [82.4, 137.0], [82.5, 137.0], [82.6, 137.0], [82.7, 137.0], [82.8, 137.0], [82.9, 137.0], [83.0, 137.0], [83.1, 137.0], [83.2, 137.0], [83.3, 137.0], [83.4, 137.0], [83.5, 137.0], [83.6, 137.0], [83.7, 137.0], [83.8, 137.0], [83.9, 137.0], [84.0, 156.0], [84.1, 156.0], [84.2, 156.0], [84.3, 156.0], [84.4, 156.0], [84.5, 156.0], [84.6, 156.0], [84.7, 156.0], [84.8, 156.0], [84.9, 156.0], [85.0, 156.0], [85.1, 156.0], [85.2, 156.0], [85.3, 156.0], [85.4, 156.0], [85.5, 156.0], [85.6, 156.0], [85.7, 156.0], [85.8, 229.0], [85.9, 229.0], [86.0, 229.0], [86.1, 229.0], [86.2, 229.0], [86.3, 229.0], [86.4, 229.0], [86.5, 229.0], [86.6, 229.0], [86.7, 229.0], [86.8, 229.0], [86.9, 229.0], [87.0, 229.0], [87.1, 229.0], [87.2, 229.0], [87.3, 229.0], [87.4, 229.0], [87.5, 229.0], [87.6, 1043.0], [87.7, 1043.0], [87.8, 1043.0], [87.9, 1043.0], [88.0, 1043.0], [88.1, 1043.0], [88.2, 1043.0], [88.3, 1043.0], [88.4, 1043.0], [88.5, 1043.0], [88.6, 1043.0], [88.7, 1043.0], [88.8, 1043.0], [88.9, 1043.0], [89.0, 1043.0], [89.1, 1043.0], [89.2, 1043.0], [89.3, 3053.0], [89.4, 3053.0], [89.5, 3053.0], [89.6, 3053.0], [89.7, 3053.0], [89.8, 3053.0], [89.9, 3053.0], [90.0, 3053.0], [90.1, 3053.0], [90.2, 3053.0], [90.3, 3053.0], [90.4, 3053.0], [90.5, 3053.0], [90.6, 3053.0], [90.7, 3053.0], [90.8, 3053.0], [90.9, 3053.0], [91.0, 3053.0], [91.1, 3084.0], [91.2, 3084.0], [91.3, 3084.0], [91.4, 3084.0], [91.5, 3084.0], [91.6, 3084.0], [91.7, 3084.0], [91.8, 3084.0], [91.9, 3084.0], [92.0, 3084.0], [92.1, 3084.0], [92.2, 3084.0], [92.3, 3084.0], [92.4, 3084.0], [92.5, 3084.0], [92.6, 3084.0], [92.7, 3084.0], [92.8, 3084.0], [92.9, 3087.0], [93.0, 3087.0], [93.1, 3087.0], [93.2, 3087.0], [93.3, 3087.0], [93.4, 3087.0], [93.5, 3087.0], [93.6, 3087.0], [93.7, 3087.0], [93.8, 3087.0], [93.9, 3087.0], [94.0, 3087.0], [94.1, 3087.0], [94.2, 3087.0], [94.3, 3087.0], [94.4, 3087.0], [94.5, 3087.0], [94.6, 3087.0], [94.7, 9052.0], [94.8, 9052.0], [94.9, 9052.0], [95.0, 9052.0], [95.1, 9052.0], [95.2, 9052.0], [95.3, 9052.0], [95.4, 9052.0], [95.5, 9052.0], [95.6, 9052.0], [95.7, 9052.0], [95.8, 9052.0], [95.9, 9052.0], [96.0, 9052.0], [96.1, 9052.0], [96.2, 9052.0], [96.3, 9052.0], [96.4, 9052.0], [96.5, 9053.0], [96.6, 9053.0], [96.7, 9053.0], [96.8, 9053.0], [96.9, 9053.0], [97.0, 9053.0], [97.1, 9053.0], [97.2, 9053.0], [97.3, 9053.0], [97.4, 9053.0], [97.5, 9053.0], [97.6, 9053.0], [97.7, 9053.0], [97.8, 9053.0], [97.9, 9053.0], [98.0, 9053.0], [98.1, 9053.0], [98.2, 9053.0], [98.3, 21065.0], [98.4, 21065.0], [98.5, 21065.0], [98.6, 21065.0], [98.7, 21065.0], [98.8, 21065.0], [98.9, 21065.0], [99.0, 21065.0], [99.1, 21065.0], [99.2, 21065.0], [99.3, 21065.0], [99.4, 21065.0], [99.5, 21065.0], [99.6, 21065.0], [99.7, 21065.0], [99.8, 21065.0], [99.9, 21065.0], [100.0, 21065.0]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-1", "isController": false}, {"data": [[0.0, 11.0], [0.1, 13.0], [0.2, 15.0], [0.3, 15.0], [0.4, 16.0], [0.5, 16.0], [0.6, 17.0], [0.7, 17.0], [0.8, 17.0], [0.9, 18.0], [1.0, 18.0], [1.1, 18.0], [1.2, 19.0], [1.3, 20.0], [1.4, 21.0], [1.5, 21.0], [1.6, 22.0], [1.7, 22.0], [1.8, 22.0], [1.9, 23.0], [2.0, 24.0], [2.1, 24.0], [2.2, 25.0], [2.3, 25.0], [2.4, 25.0], [2.5, 25.0], [2.6, 25.0], [2.7, 25.0], [2.8, 25.0], [2.9, 26.0], [3.0, 26.0], [3.1, 26.0], [3.2, 28.0], [3.3, 28.0], [3.4, 28.0], [3.5, 29.0], [3.6, 29.0], [3.7, 29.0], [3.8, 29.0], [3.9, 30.0], [4.0, 30.0], [4.1, 30.0], [4.2, 32.0], [4.3, 32.0], [4.4, 32.0], [4.5, 33.0], [4.6, 33.0], [4.7, 34.0], [4.8, 34.0], [4.9, 34.0], [5.0, 34.0], [5.1, 34.0], [5.2, 34.0], [5.3, 35.0], [5.4, 35.0], [5.5, 35.0], [5.6, 36.0], [5.7, 36.0], [5.8, 36.0], [5.9, 36.0], [6.0, 37.0], [6.1, 37.0], [6.2, 38.0], [6.3, 38.0], [6.4, 38.0], [6.5, 39.0], [6.6, 39.0], [6.7, 40.0], [6.8, 40.0], [6.9, 40.0], [7.0, 40.0], [7.1, 41.0], [7.2, 41.0], [7.3, 41.0], [7.4, 41.0], [7.5, 41.0], [7.6, 42.0], [7.7, 42.0], [7.8, 43.0], [7.9, 43.0], [8.0, 43.0], [8.1, 44.0], [8.2, 44.0], [8.3, 44.0], [8.4, 44.0], [8.5, 45.0], [8.6, 45.0], [8.7, 45.0], [8.8, 45.0], [8.9, 46.0], [9.0, 46.0], [9.1, 46.0], [9.2, 46.0], [9.3, 46.0], [9.4, 46.0], [9.5, 47.0], [9.6, 47.0], [9.7, 48.0], [9.8, 48.0], [9.9, 48.0], [10.0, 49.0], [10.1, 49.0], [10.2, 50.0], [10.3, 50.0], [10.4, 51.0], [10.5, 51.0], [10.6, 51.0], [10.7, 52.0], [10.8, 52.0], [10.9, 52.0], [11.0, 52.0], [11.1, 53.0], [11.2, 54.0], [11.3, 55.0], [11.4, 55.0], [11.5, 55.0], [11.6, 56.0], [11.7, 56.0], [11.8, 57.0], [11.9, 57.0], [12.0, 59.0], [12.1, 59.0], [12.2, 59.0], [12.3, 60.0], [12.4, 60.0], [12.5, 60.0], [12.6, 60.0], [12.7, 61.0], [12.8, 61.0], [12.9, 62.0], [13.0, 62.0], [13.1, 62.0], [13.2, 62.0], [13.3, 62.0], [13.4, 63.0], [13.5, 63.0], [13.6, 63.0], [13.7, 63.0], [13.8, 63.0], [13.9, 63.0], [14.0, 63.0], [14.1, 64.0], [14.2, 64.0], [14.3, 64.0], [14.4, 65.0], [14.5, 65.0], [14.6, 65.0], [14.7, 65.0], [14.8, 65.0], [14.9, 65.0], [15.0, 66.0], [15.1, 66.0], [15.2, 66.0], [15.3, 66.0], [15.4, 66.0], [15.5, 67.0], [15.6, 67.0], [15.7, 67.0], [15.8, 67.0], [15.9, 67.0], [16.0, 67.0], [16.1, 68.0], [16.2, 68.0], [16.3, 68.0], [16.4, 68.0], [16.5, 69.0], [16.6, 69.0], [16.7, 69.0], [16.8, 69.0], [16.9, 69.0], [17.0, 69.0], [17.1, 70.0], [17.2, 70.0], [17.3, 70.0], [17.4, 70.0], [17.5, 70.0], [17.6, 70.0], [17.7, 70.0], [17.8, 70.0], [17.9, 70.0], [18.0, 71.0], [18.1, 71.0], [18.2, 71.0], [18.3, 71.0], [18.4, 71.0], [18.5, 71.0], [18.6, 72.0], [18.7, 72.0], [18.8, 72.0], [18.9, 72.0], [19.0, 72.0], [19.1, 73.0], [19.2, 73.0], [19.3, 73.0], [19.4, 73.0], [19.5, 73.0], [19.6, 74.0], [19.7, 74.0], [19.8, 74.0], [19.9, 74.0], [20.0, 74.0], [20.1, 74.0], [20.2, 75.0], [20.3, 75.0], [20.4, 75.0], [20.5, 75.0], [20.6, 76.0], [20.7, 76.0], [20.8, 76.0], [20.9, 76.0], [21.0, 77.0], [21.1, 77.0], [21.2, 78.0], [21.3, 78.0], [21.4, 79.0], [21.5, 79.0], [21.6, 79.0], [21.7, 79.0], [21.8, 80.0], [21.9, 80.0], [22.0, 81.0], [22.1, 82.0], [22.2, 83.0], [22.3, 83.0], [22.4, 85.0], [22.5, 87.0], [22.6, 87.0], [22.7, 87.0], [22.8, 88.0], [22.9, 88.0], [23.0, 89.0], [23.1, 90.0], [23.2, 90.0], [23.3, 91.0], [23.4, 92.0], [23.5, 92.0], [23.6, 93.0], [23.7, 93.0], [23.8, 94.0], [23.9, 95.0], [24.0, 96.0], [24.1, 97.0], [24.2, 99.0], [24.3, 100.0], [24.4, 102.0], [24.5, 103.0], [24.6, 104.0], [24.7, 105.0], [24.8, 105.0], [24.9, 106.0], [25.0, 106.0], [25.1, 107.0], [25.2, 107.0], [25.3, 108.0], [25.4, 109.0], [25.5, 109.0], [25.6, 110.0], [25.7, 111.0], [25.8, 112.0], [25.9, 113.0], [26.0, 116.0], [26.1, 120.0], [26.2, 121.0], [26.3, 123.0], [26.4, 126.0], [26.5, 127.0], [26.6, 129.0], [26.7, 130.0], [26.8, 132.0], [26.9, 134.0], [27.0, 137.0], [27.1, 138.0], [27.2, 146.0], [27.3, 157.0], [27.4, 159.0], [27.5, 174.0], [27.6, 187.0], [27.7, 190.0], [27.8, 192.0], [27.9, 196.0], [28.0, 201.0], [28.1, 203.0], [28.2, 206.0], [28.3, 207.0], [28.4, 209.0], [28.5, 211.0], [28.6, 212.0], [28.7, 226.0], [28.8, 227.0], [28.9, 255.0], [29.0, 276.0], [29.1, 302.0], [29.2, 881.0], [29.3, 893.0], [29.4, 896.0], [29.5, 909.0], [29.6, 918.0], [29.7, 922.0], [29.8, 963.0], [29.9, 1021.0], [30.0, 1031.0], [30.1, 1032.0], [30.2, 1039.0], [30.3, 1039.0], [30.4, 1041.0], [30.5, 1063.0], [30.6, 1091.0], [30.7, 1102.0], [30.8, 1110.0], [30.9, 1111.0], [31.0, 1113.0], [31.1, 1119.0], [31.2, 1121.0], [31.3, 1121.0], [31.4, 1124.0], [31.5, 1131.0], [31.6, 1173.0], [31.7, 1184.0], [31.8, 1188.0], [31.9, 1189.0], [32.0, 1197.0], [32.1, 1207.0], [32.2, 1208.0], [32.3, 1211.0], [32.4, 1256.0], [32.5, 1780.0], [32.6, 3021.0], [32.7, 3025.0], [32.8, 3026.0], [32.9, 3027.0], [33.0, 3028.0], [33.1, 3029.0], [33.2, 3030.0], [33.3, 3030.0], [33.4, 3030.0], [33.5, 3031.0], [33.6, 3033.0], [33.7, 3033.0], [33.8, 3034.0], [33.9, 3035.0], [34.0, 3036.0], [34.1, 3036.0], [34.2, 3036.0], [34.3, 3036.0], [34.4, 3037.0], [34.5, 3038.0], [34.6, 3038.0], [34.7, 3038.0], [34.8, 3039.0], [34.9, 3039.0], [35.0, 3039.0], [35.1, 3040.0], [35.2, 3041.0], [35.3, 3042.0], [35.4, 3042.0], [35.5, 3043.0], [35.6, 3043.0], [35.7, 3043.0], [35.8, 3043.0], [35.9, 3044.0], [36.0, 3044.0], [36.1, 3044.0], [36.2, 3044.0], [36.3, 3045.0], [36.4, 3045.0], [36.5, 3045.0], [36.6, 3046.0], [36.7, 3046.0], [36.8, 3046.0], [36.9, 3047.0], [37.0, 3047.0], [37.1, 3047.0], [37.2, 3047.0], [37.3, 3047.0], [37.4, 3048.0], [37.5, 3048.0], [37.6, 3048.0], [37.7, 3048.0], [37.8, 3048.0], [37.9, 3048.0], [38.0, 3049.0], [38.1, 3049.0], [38.2, 3050.0], [38.3, 3050.0], [38.4, 3050.0], [38.5, 3050.0], [38.6, 3051.0], [38.7, 3051.0], [38.8, 3051.0], [38.9, 3051.0], [39.0, 3052.0], [39.1, 3052.0], [39.2, 3052.0], [39.3, 3052.0], [39.4, 3053.0], [39.5, 3053.0], [39.6, 3053.0], [39.7, 3053.0], [39.8, 3053.0], [39.9, 3053.0], [40.0, 3054.0], [40.1, 3054.0], [40.2, 3054.0], [40.3, 3054.0], [40.4, 3054.0], [40.5, 3055.0], [40.6, 3055.0], [40.7, 3056.0], [40.8, 3056.0], [40.9, 3056.0], [41.0, 3056.0], [41.1, 3057.0], [41.2, 3057.0], [41.3, 3057.0], [41.4, 3057.0], [41.5, 3058.0], [41.6, 3058.0], [41.7, 3059.0], [41.8, 3059.0], [41.9, 3059.0], [42.0, 3060.0], [42.1, 3060.0], [42.2, 3060.0], [42.3, 3060.0], [42.4, 3060.0], [42.5, 3061.0], [42.6, 3061.0], [42.7, 3061.0], [42.8, 3061.0], [42.9, 3062.0], [43.0, 3062.0], [43.1, 3062.0], [43.2, 3062.0], [43.3, 3062.0], [43.4, 3062.0], [43.5, 3063.0], [43.6, 3063.0], [43.7, 3063.0], [43.8, 3064.0], [43.9, 3064.0], [44.0, 3064.0], [44.1, 3064.0], [44.2, 3065.0], [44.3, 3065.0], [44.4, 3065.0], [44.5, 3065.0], [44.6, 3065.0], [44.7, 3066.0], [44.8, 3066.0], [44.9, 3066.0], [45.0, 3066.0], [45.1, 3067.0], [45.2, 3067.0], [45.3, 3067.0], [45.4, 3067.0], [45.5, 3067.0], [45.6, 3068.0], [45.7, 3068.0], [45.8, 3068.0], [45.9, 3068.0], [46.0, 3068.0], [46.1, 3069.0], [46.2, 3070.0], [46.3, 3070.0], [46.4, 3070.0], [46.5, 3070.0], [46.6, 3071.0], [46.7, 3071.0], [46.8, 3071.0], [46.9, 3071.0], [47.0, 3071.0], [47.1, 3071.0], [47.2, 3072.0], [47.3, 3072.0], [47.4, 3072.0], [47.5, 3072.0], [47.6, 3072.0], [47.7, 3072.0], [47.8, 3073.0], [47.9, 3073.0], [48.0, 3073.0], [48.1, 3073.0], [48.2, 3073.0], [48.3, 3074.0], [48.4, 3074.0], [48.5, 3074.0], [48.6, 3074.0], [48.7, 3075.0], [48.8, 3075.0], [48.9, 3075.0], [49.0, 3075.0], [49.1, 3076.0], [49.2, 3076.0], [49.3, 3076.0], [49.4, 3076.0], [49.5, 3076.0], [49.6, 3076.0], [49.7, 3077.0], [49.8, 3077.0], [49.9, 3077.0], [50.0, 3077.0], [50.1, 3077.0], [50.2, 3077.0], [50.3, 3077.0], [50.4, 3078.0], [50.5, 3078.0], [50.6, 3078.0], [50.7, 3078.0], [50.8, 3079.0], [50.9, 3079.0], [51.0, 3079.0], [51.1, 3079.0], [51.2, 3079.0], [51.3, 3080.0], [51.4, 3080.0], [51.5, 3080.0], [51.6, 3080.0], [51.7, 3080.0], [51.8, 3080.0], [51.9, 3081.0], [52.0, 3081.0], [52.1, 3081.0], [52.2, 3081.0], [52.3, 3081.0], [52.4, 3081.0], [52.5, 3082.0], [52.6, 3082.0], [52.7, 3082.0], [52.8, 3082.0], [52.9, 3082.0], [53.0, 3082.0], [53.1, 3082.0], [53.2, 3083.0], [53.3, 3083.0], [53.4, 3083.0], [53.5, 3083.0], [53.6, 3083.0], [53.7, 3084.0], [53.8, 3084.0], [53.9, 3084.0], [54.0, 3084.0], [54.1, 3084.0], [54.2, 3084.0], [54.3, 3085.0], [54.4, 3085.0], [54.5, 3085.0], [54.6, 3085.0], [54.7, 3085.0], [54.8, 3085.0], [54.9, 3086.0], [55.0, 3086.0], [55.1, 3086.0], [55.2, 3086.0], [55.3, 3087.0], [55.4, 3087.0], [55.5, 3087.0], [55.6, 3087.0], [55.7, 3087.0], [55.8, 3088.0], [55.9, 3088.0], [56.0, 3088.0], [56.1, 3089.0], [56.2, 3089.0], [56.3, 3089.0], [56.4, 3089.0], [56.5, 3089.0], [56.6, 3090.0], [56.7, 3090.0], [56.8, 3090.0], [56.9, 3090.0], [57.0, 3090.0], [57.1, 3090.0], [57.2, 3091.0], [57.3, 3091.0], [57.4, 3091.0], [57.5, 3091.0], [57.6, 3092.0], [57.7, 3092.0], [57.8, 3093.0], [57.9, 3093.0], [58.0, 3093.0], [58.1, 3093.0], [58.2, 3093.0], [58.3, 3093.0], [58.4, 3094.0], [58.5, 3094.0], [58.6, 3094.0], [58.7, 3094.0], [58.8, 3095.0], [58.9, 3095.0], [59.0, 3095.0], [59.1, 3095.0], [59.2, 3095.0], [59.3, 3095.0], [59.4, 3095.0], [59.5, 3095.0], [59.6, 3096.0], [59.7, 3096.0], [59.8, 3096.0], [59.9, 3097.0], [60.0, 3097.0], [60.1, 3097.0], [60.2, 3097.0], [60.3, 3098.0], [60.4, 3098.0], [60.5, 3099.0], [60.6, 3099.0], [60.7, 3100.0], [60.8, 3100.0], [60.9, 3100.0], [61.0, 3101.0], [61.1, 3101.0], [61.2, 3101.0], [61.3, 3101.0], [61.4, 3102.0], [61.5, 3102.0], [61.6, 3102.0], [61.7, 3102.0], [61.8, 3103.0], [61.9, 3103.0], [62.0, 3103.0], [62.1, 3103.0], [62.2, 3104.0], [62.3, 3104.0], [62.4, 3104.0], [62.5, 3105.0], [62.6, 3105.0], [62.7, 3105.0], [62.8, 3106.0], [62.9, 3106.0], [63.0, 3106.0], [63.1, 3107.0], [63.2, 3108.0], [63.3, 3108.0], [63.4, 3109.0], [63.5, 3110.0], [63.6, 3110.0], [63.7, 3110.0], [63.8, 3110.0], [63.9, 3111.0], [64.0, 3112.0], [64.1, 3112.0], [64.2, 3113.0], [64.3, 3113.0], [64.4, 3114.0], [64.5, 3115.0], [64.6, 3115.0], [64.7, 3117.0], [64.8, 3119.0], [64.9, 3121.0], [65.0, 3125.0], [65.1, 3130.0], [65.2, 3132.0], [65.3, 3158.0], [65.4, 4106.0], [65.5, 4121.0], [65.6, 4126.0], [65.7, 4217.0], [65.8, 4859.0], [65.9, 6136.0], [66.0, 6142.0], [66.1, 6147.0], [66.2, 6161.0], [66.3, 9026.0], [66.4, 9029.0], [66.5, 9033.0], [66.6, 9037.0], [66.7, 9042.0], [66.8, 9043.0], [66.9, 9045.0], [67.0, 9046.0], [67.1, 9047.0], [67.2, 9048.0], [67.3, 9049.0], [67.4, 9050.0], [67.5, 9051.0], [67.6, 9052.0], [67.7, 9052.0], [67.8, 9052.0], [67.9, 9053.0], [68.0, 9053.0], [68.1, 9053.0], [68.2, 9054.0], [68.3, 9054.0], [68.4, 9055.0], [68.5, 9056.0], [68.6, 9056.0], [68.7, 9056.0], [68.8, 9057.0], [68.9, 9057.0], [69.0, 9057.0], [69.1, 9058.0], [69.2, 9058.0], [69.3, 9059.0], [69.4, 9059.0], [69.5, 9059.0], [69.6, 9059.0], [69.7, 9060.0], [69.8, 9060.0], [69.9, 9060.0], [70.0, 9061.0], [70.1, 9061.0], [70.2, 9061.0], [70.3, 9061.0], [70.4, 9062.0], [70.5, 9062.0], [70.6, 9062.0], [70.7, 9063.0], [70.8, 9063.0], [70.9, 9063.0], [71.0, 9064.0], [71.1, 9064.0], [71.2, 9065.0], [71.3, 9065.0], [71.4, 9066.0], [71.5, 9067.0], [71.6, 9068.0], [71.7, 9069.0], [71.8, 9069.0], [71.9, 9070.0], [72.0, 9070.0], [72.1, 9070.0], [72.2, 9071.0], [72.3, 9071.0], [72.4, 9072.0], [72.5, 9072.0], [72.6, 9072.0], [72.7, 9072.0], [72.8, 9073.0], [72.9, 9073.0], [73.0, 9073.0], [73.1, 9074.0], [73.2, 9074.0], [73.3, 9074.0], [73.4, 9075.0], [73.5, 9075.0], [73.6, 9076.0], [73.7, 9076.0], [73.8, 9077.0], [73.9, 9077.0], [74.0, 9077.0], [74.1, 9077.0], [74.2, 9078.0], [74.3, 9078.0], [74.4, 9078.0], [74.5, 9078.0], [74.6, 9078.0], [74.7, 9079.0], [74.8, 9079.0], [74.9, 9079.0], [75.0, 9079.0], [75.1, 9080.0], [75.2, 9081.0], [75.3, 9082.0], [75.4, 9082.0], [75.5, 9082.0], [75.6, 9083.0], [75.7, 9083.0], [75.8, 9084.0], [75.9, 9084.0], [76.0, 9084.0], [76.1, 9085.0], [76.2, 9085.0], [76.3, 9086.0], [76.4, 9086.0], [76.5, 9086.0], [76.6, 9086.0], [76.7, 9087.0], [76.8, 9087.0], [76.9, 9088.0], [77.0, 9088.0], [77.1, 9088.0], [77.2, 9088.0], [77.3, 9089.0], [77.4, 9089.0], [77.5, 9090.0], [77.6, 9090.0], [77.7, 9090.0], [77.8, 9090.0], [77.9, 9091.0], [78.0, 9092.0], [78.1, 9092.0], [78.2, 9092.0], [78.3, 9092.0], [78.4, 9092.0], [78.5, 9093.0], [78.6, 9094.0], [78.7, 9094.0], [78.8, 9094.0], [78.9, 9095.0], [79.0, 9096.0], [79.1, 9096.0], [79.2, 9096.0], [79.3, 9097.0], [79.4, 9098.0], [79.5, 9099.0], [79.6, 9099.0], [79.7, 9099.0], [79.8, 9100.0], [79.9, 9102.0], [80.0, 9104.0], [80.1, 9106.0], [80.2, 9106.0], [80.3, 9107.0], [80.4, 9107.0], [80.5, 9108.0], [80.6, 9113.0], [80.7, 9115.0], [80.8, 9117.0], [80.9, 9119.0], [81.0, 9122.0], [81.1, 9125.0], [81.2, 9134.0], [81.3, 9137.0], [81.4, 9142.0], [81.5, 9147.0], [81.6, 9150.0], [81.7, 9154.0], [81.8, 9162.0], [81.9, 9785.0], [82.0, 10102.0], [82.1, 10111.0], [82.2, 10120.0], [82.3, 10132.0], [82.4, 10822.0], [82.5, 21022.0], [82.6, 21026.0], [82.7, 21027.0], [82.8, 21028.0], [82.9, 21029.0], [83.0, 21030.0], [83.1, 21030.0], [83.2, 21031.0], [83.3, 21031.0], [83.4, 21032.0], [83.5, 21032.0], [83.6, 21033.0], [83.7, 21033.0], [83.8, 21033.0], [83.9, 21034.0], [84.0, 21034.0], [84.1, 21035.0], [84.2, 21036.0], [84.3, 21036.0], [84.4, 21037.0], [84.5, 21037.0], [84.6, 21037.0], [84.7, 21038.0], [84.8, 21038.0], [84.9, 21038.0], [85.0, 21038.0], [85.1, 21039.0], [85.2, 21039.0], [85.3, 21039.0], [85.4, 21039.0], [85.5, 21040.0], [85.6, 21040.0], [85.7, 21040.0], [85.8, 21041.0], [85.9, 21041.0], [86.0, 21041.0], [86.1, 21041.0], [86.2, 21041.0], [86.3, 21042.0], [86.4, 21042.0], [86.5, 21043.0], [86.6, 21043.0], [86.7, 21043.0], [86.8, 21043.0], [86.9, 21044.0], [87.0, 21044.0], [87.1, 21044.0], [87.2, 21044.0], [87.3, 21045.0], [87.4, 21046.0], [87.5, 21046.0], [87.6, 21046.0], [87.7, 21046.0], [87.8, 21046.0], [87.9, 21046.0], [88.0, 21046.0], [88.1, 21047.0], [88.2, 21048.0], [88.3, 21048.0], [88.4, 21049.0], [88.5, 21049.0], [88.6, 21049.0], [88.7, 21050.0], [88.8, 21050.0], [88.9, 21051.0], [89.0, 21051.0], [89.1, 21052.0], [89.2, 21052.0], [89.3, 21053.0], [89.4, 21053.0], [89.5, 21055.0], [89.6, 21055.0], [89.7, 21055.0], [89.8, 21055.0], [89.9, 21056.0], [90.0, 21057.0], [90.1, 21057.0], [90.2, 21058.0], [90.3, 21059.0], [90.4, 21059.0], [90.5, 21059.0], [90.6, 21059.0], [90.7, 21060.0], [90.8, 21060.0], [90.9, 21060.0], [91.0, 21061.0], [91.1, 21062.0], [91.2, 21062.0], [91.3, 21062.0], [91.4, 21062.0], [91.5, 21062.0], [91.6, 21063.0], [91.7, 21063.0], [91.8, 21063.0], [91.9, 21063.0], [92.0, 21064.0], [92.1, 21064.0], [92.2, 21064.0], [92.3, 21064.0], [92.4, 21065.0], [92.5, 21065.0], [92.6, 21065.0], [92.7, 21065.0], [92.8, 21065.0], [92.9, 21065.0], [93.0, 21066.0], [93.1, 21066.0], [93.2, 21067.0], [93.3, 21067.0], [93.4, 21067.0], [93.5, 21067.0], [93.6, 21067.0], [93.7, 21068.0], [93.8, 21068.0], [93.9, 21069.0], [94.0, 21069.0], [94.1, 21069.0], [94.2, 21070.0], [94.3, 21070.0], [94.4, 21070.0], [94.5, 21071.0], [94.6, 21071.0], [94.7, 21071.0], [94.8, 21072.0], [94.9, 21072.0], [95.0, 21073.0], [95.1, 21075.0], [95.2, 21075.0], [95.3, 21076.0], [95.4, 21076.0], [95.5, 21077.0], [95.6, 21078.0], [95.7, 21079.0], [95.8, 21079.0], [95.9, 21079.0], [96.0, 21080.0], [96.1, 21080.0], [96.2, 21081.0], [96.3, 21082.0], [96.4, 21082.0], [96.5, 21082.0], [96.6, 21083.0], [96.7, 21084.0], [96.8, 21084.0], [96.9, 21084.0], [97.0, 21084.0], [97.1, 21085.0], [97.2, 21085.0], [97.3, 21085.0], [97.4, 21086.0], [97.5, 21087.0], [97.6, 21087.0], [97.7, 21087.0], [97.8, 21088.0], [97.9, 21088.0], [98.0, 21089.0], [98.1, 21090.0], [98.2, 21090.0], [98.3, 21094.0], [98.4, 21095.0], [98.5, 21096.0], [98.6, 21097.0], [98.7, 21099.0], [98.8, 21099.0], [98.9, 21102.0], [99.0, 21102.0], [99.1, 21103.0], [99.2, 21104.0], [99.3, 21108.0], [99.4, 21111.0], [99.5, 21115.0], [99.6, 21117.0], [99.7, 21119.0], [99.8, 21145.0], [99.9, 21172.0]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 562.0, "series": [{"data": [[0.0, 3.0], [1100.0, 2.0], [9000.0, 9.0], [9100.0, 5.0], [3000.0, 12.0], [6100.0, 2.0], [6000.0, 5.0], [3100.0, 1.0], [900.0, 8.0], [1000.0, 9.0]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-0", "isController": false}, {"data": [[0.0, 44.0], [9000.0, 2.0], [21000.0, 1.0], [3000.0, 3.0], [100.0, 4.0], [200.0, 1.0], [1000.0, 1.0]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-1", "isController": false}, {"data": [[0.0, 485.0], [9000.0, 270.0], [9100.0, 43.0], [9700.0, 1.0], [10100.0, 9.0], [10800.0, 1.0], [800.0, 6.0], [900.0, 8.0], [1000.0, 15.0], [1100.0, 28.0], [1200.0, 9.0], [21000.0, 328.0], [21100.0, 22.0], [21700.0, 1.0], [100.0, 73.0], [1700.0, 1.0], [3000.0, 562.0], [3100.0, 94.0], [200.0, 23.0], [3900.0, 1.0], [4100.0, 6.0], [4200.0, 1.0], [300.0, 2.0], [4800.0, 2.0], [6100.0, 8.0], [6000.0, 1.0]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 86.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1039.0, "series": [{"data": [[0.0, 635.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 86.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1039.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 352.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 890.7092803030329, "minX": 1.61431944E12, "maxY": 890.7092803030329, "series": [{"data": [[1.61431944E12, 890.7092803030329]], "isOverall": false, "label": "500 Users loggin same time", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61431944E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 21428.0, "series": [{"data": [[594.0, 9094.0], [593.0, 9106.5], [590.0, 9094.0], [588.0, 9107.5], [585.0, 9091.0], [659.0, 9090.5], [657.0, 9101.0], [656.0, 9098.0], [655.0, 9083.0], [654.0, 9089.0], [653.0, 9074.0], [682.0, 6100.0], [681.0, 6097.0], [679.0, 6097.0], [678.0, 6099.0], [677.0, 6101.0], [676.0, 6099.0], [717.0, 1107.0], [708.0, 1094.0], [917.0, 3041.0], [915.0, 3031.0], [911.0, 3036.5], [909.0, 3030.5], [1126.0, 924.0], [1243.0, 954.5], [1242.0, 975.0], [1223.0, 975.0], [1323.0, 3087.0], [1322.0, 3062.0], [1320.0, 3054.0], [1319.0, 3087.0], [1289.0, 3031.0], [5.0, 59.0], [1368.0, 1056.0], [1367.0, 1062.0], [1366.0, 1064.0], [1364.0, 1065.0], [1353.0, 70.0], [1352.0, 1032.0], [1441.0, 940.0], [392.0, 64.0], [387.0, 1100.0]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-0", "isController": false}, {"data": [[932.6071428571429, 4093.464285714285]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-0-Aggregated", "isController": false}, {"data": [[594.0, 33.0], [593.0, 42.5], [590.0, 49.0], [588.0, 52.5], [585.0, 59.0], [659.0, 48.0], [657.0, 47.0], [656.0, 54.0], [655.0, 54.0], [654.0, 51.0], [653.0, 60.0], [682.0, 36.0], [681.0, 43.5], [679.0, 44.0], [678.0, 48.0], [677.0, 49.0], [676.0, 61.0], [717.0, 3084.0], [708.0, 3087.0], [917.0, 52.0], [915.0, 69.0], [911.0, 62.5], [909.0, 69.5], [1126.0, 3053.0], [1243.0, 100.5], [1242.0, 156.0], [1223.0, 137.0], [1323.0, 37.0], [1322.0, 37.0], [1320.0, 39.0], [1319.0, 43.0], [1289.0, 55.0], [5.0, 21065.0], [1368.0, 34.0], [1367.0, 39.0], [1366.0, 44.5], [1364.0, 47.5], [1353.0, 1043.0], [1352.0, 27.0], [1441.0, 229.0], [392.0, 9052.0], [387.0, 9053.0]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-1", "isController": false}, {"data": [[932.6071428571429, 935.5714285714284]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-1-Aggregated", "isController": false}, {"data": [[4.0, 21082.0], [5.0, 21428.0], [6.0, 21074.0], [7.0, 21053.0], [10.0, 21050.5], [12.0, 21056.0], [13.0, 21055.0], [14.0, 21057.0], [15.0, 21087.0], [17.0, 21062.0], [18.0, 21038.0], [20.0, 21033.0], [21.0, 21046.0], [23.0, 21050.0], [83.0, 21119.0], [87.0, 21101.5], [88.0, 21100.333333333332], [89.0, 21069.0], [90.0, 21067.407407407412], [91.0, 21083.916666666664], [95.0, 21084.0], [94.0, 21076.0], [93.0, 21084.0], [92.0, 21076.0], [97.0, 21085.0], [96.0, 21083.0], [103.0, 21063.5], [101.0, 21062.0], [100.0, 21075.0], [107.0, 21063.0], [106.0, 21067.0], [105.0, 21066.0], [104.0, 21067.0], [111.0, 21066.0], [110.0, 21062.0], [109.0, 21059.0], [115.0, 21059.0], [113.0, 21065.0], [112.0, 21059.0], [114.0, 21062.0], [119.0, 21067.0], [118.0, 21059.0], [117.0, 21063.0], [116.0, 21061.0], [122.0, 21062.0], [121.0, 21064.0], [120.0, 21056.0], [126.0, 21068.0], [124.0, 21065.0], [135.0, 21066.333333333332], [133.0, 21063.5], [131.0, 21066.5], [129.0, 21065.0], [128.0, 21062.5], [143.0, 21069.5], [141.0, 21064.0], [140.0, 21065.0], [139.0, 21066.5], [138.0, 21064.0], [136.0, 21066.0], [150.0, 21070.0], [149.0, 21068.0], [148.0, 21066.0], [145.0, 21065.0], [144.0, 21064.0], [158.0, 21070.0], [157.0, 21066.5], [156.0, 21072.5], [155.0, 21069.0], [153.0, 21073.0], [152.0, 21071.0], [166.0, 21070.0], [164.0, 21065.0], [175.0, 21055.0], [174.0, 21070.0], [172.0, 21072.0], [171.0, 21064.0], [170.0, 21062.0], [183.0, 21052.0], [182.0, 21043.0], [181.0, 21051.333333333332], [179.0, 21059.0], [178.0, 21067.0], [177.0, 21065.0], [176.0, 21057.5], [191.0, 21053.333333333332], [189.0, 21054.0], [187.0, 21052.333333333332], [186.0, 21041.0], [185.0, 21058.0], [184.0, 21044.0], [199.0, 21055.333333333332], [198.0, 21052.333333333332], [196.0, 21041.0], [195.0, 21055.0], [194.0, 21057.0], [193.0, 21067.0], [192.0, 21042.0], [206.0, 21056.0], [204.0, 21052.0], [202.0, 21048.0], [200.0, 21046.0], [209.0, 21051.0], [208.0, 21045.0], [302.0, 21029.5], [303.0, 21037.0], [300.0, 21031.0], [291.0, 21032.0], [290.0, 21037.0], [289.0, 21026.0], [299.0, 21028.0], [298.0, 21033.0], [297.0, 21037.0], [296.0, 21032.0], [295.0, 21034.0], [294.0, 21030.0], [293.0, 21027.0], [292.0, 21037.0], [307.0, 21041.0], [319.0, 21119.0], [318.0, 21102.333333333332], [316.0, 21125.5], [310.0, 21044.0], [309.0, 21039.5], [308.0, 21043.0], [306.0, 21039.5], [305.0, 21036.0], [304.0, 21038.0], [334.0, 21085.04], [335.0, 21046.0], [332.0, 21110.0], [323.0, 21094.5], [321.0, 21040.169811320757], [320.0, 21145.0], [330.0, 21112.0], [329.0, 21102.0], [328.0, 21103.0], [327.0, 21099.5], [326.0, 21099.0], [325.0, 21094.0], [339.0, 21048.0], [350.0, 21040.0], [351.0, 21041.0], [349.0, 21038.0], [347.0, 21041.0], [343.0, 21041.0], [342.0, 21047.0], [341.0, 21051.0], [340.0, 21046.0], [338.0, 21046.0], [336.0, 21048.0], [367.0, 9087.5], [365.0, 9088.5], [363.0, 9082.75], [360.0, 9081.0], [359.0, 9069.0], [358.0, 9073.0], [356.0, 9078.0], [382.0, 9064.0], [379.0, 9073.666666666666], [377.0, 9056.0], [375.0, 9070.0], [373.0, 9077.0], [372.0, 9089.0], [371.0, 9076.333333333334], [369.0, 9066.0], [399.0, 9060.0], [397.0, 9058.5], [395.0, 9053.5], [393.0, 9065.0], [392.0, 9294.666666666666], [391.0, 9063.0], [389.0, 9063.5], [387.0, 9656.0], [384.0, 9073.0], [415.0, 9047.0], [414.0, 9053.0], [412.0, 9073.0], [410.0, 9074.4], [409.0, 9061.0], [407.0, 9062.0], [401.0, 9053.0], [430.0, 9093.0], [431.0, 9093.0], [428.0, 9090.0], [427.0, 9084.0], [426.0, 9069.0], [425.0, 9086.333333333334], [424.0, 9088.5], [423.0, 9077.0], [417.0, 9073.0], [416.0, 9045.0], [419.0, 9066.0], [444.0, 9087.0], [443.0, 9072.0], [442.0, 9071.2], [437.0, 9082.0], [436.0, 9079.666666666666], [434.0, 9078.0], [463.0, 9060.0], [461.0, 9068.0], [460.0, 9068.6], [456.0, 9078.0], [453.0, 9077.5], [451.0, 9076.0], [450.0, 9074.0], [449.0, 9078.8], [465.0, 9057.0], [495.0, 9101.0], [493.0, 9096.5], [483.0, 9084.0], [481.0, 9060.0], [491.0, 9093.5], [490.0, 9070.0], [489.0, 9069.666666666666], [488.0, 9084.0], [487.0, 9078.333333333334], [485.0, 9080.5], [484.0, 9083.0], [511.0, 9094.0], [505.0, 9100.0], [503.0, 9091.5], [501.0, 9084.666666666666], [499.0, 9083.833333333332], [498.0, 9096.5], [496.0, 9090.0], [542.0, 9060.5], [531.0, 9082.5], [543.0, 9057.0], [528.0, 9088.0], [530.0, 9092.0], [529.0, 9096.0], [540.0, 9086.0], [539.0, 9085.5], [537.0, 9086.5], [517.0, 9097.0], [516.0, 9091.666666666666], [514.0, 9078.0], [513.0, 9096.0], [527.0, 9090.0], [526.0, 9088.666666666666], [524.0, 9091.0], [522.0, 9093.0], [520.0, 9091.25], [535.0, 9092.0], [534.0, 9088.0], [533.0, 9090.0], [570.0, 9079.5], [574.0, 9075.333333333334], [572.0, 9065.75], [571.0, 9058.0], [569.0, 9067.0], [551.0, 9048.0], [550.0, 9046.0], [548.0, 9048.0], [546.0, 9052.0], [544.0, 9060.0], [559.0, 9027.0], [556.0, 9033.0], [554.0, 9042.0], [553.0, 9049.0], [552.0, 9052.0], [600.0, 9115.75], [604.0, 9112.0], [606.0, 9114.0], [603.0, 9123.0], [594.0, 9134.0], [593.0, 9116.333333333334], [590.0, 9100.0], [578.0, 9065.0], [576.0, 9067.0], [582.0, 9056.0], [580.0, 9054.2], [588.0, 9125.666666666666], [585.0, 9088.666666666666], [634.0, 9069.0], [633.0, 9578.5], [631.0, 10139.0], [630.0, 9643.11111111111], [627.0, 9414.333333333334], [618.0, 10132.0], [617.0, 9097.0], [616.0, 9110.0], [609.0, 9113.0], [608.0, 9125.0], [669.0, 9092.0], [670.0, 9083.6], [668.0, 9084.0], [665.0, 9099.5], [659.0, 9140.5], [657.0, 9150.0], [656.0, 9154.0], [655.0, 9139.0], [640.0, 9049.0], [643.0, 9047.333333333334], [641.0, 9050.0], [647.0, 9047.0], [646.0, 9063.0], [654.0, 9142.0], [653.0, 9136.0], [652.0, 9061.75], [649.0, 9067.0], [679.0, 6142.0], [702.0, 3093.0], [699.0, 3094.3333333333335], [688.0, 3095.6666666666665], [686.0, 3096.0], [684.0, 6099.5], [682.0, 6136.0], [681.0, 6141.0], [678.0, 6147.0], [677.0, 6151.0], [676.0, 6161.0], [675.0, 9094.0], [673.0, 9107.0], [672.0, 9099.5], [730.0, 3096.0], [722.0, 3102.0], [735.0, 3089.0], [734.0, 3090.5], [732.0, 3095.0], [719.0, 3109.0], [706.0, 3101.0], [708.0, 3969.0], [707.0, 3086.0], [710.0, 3095.0], [709.0, 3102.0], [717.0, 3384.8333333333335], [716.0, 3090.0], [714.0, 3098.0], [713.0, 3092.0], [712.0, 3090.0], [727.0, 3095.0], [726.0, 3105.0], [724.0, 3106.6666666666665], [721.0, 3112.3333333333335], [753.0, 3073.0], [765.0, 3103.0], [767.0, 3101.0], [752.0, 3070.0], [764.0, 3086.0], [762.0, 3106.0], [760.0, 3093.0], [741.0, 3097.5], [740.0, 3095.0], [739.0, 3095.0], [738.0, 3086.0], [736.0, 3095.75], [751.0, 3084.0], [746.0, 3082.6666666666665], [744.0, 3088.0], [758.0, 3094.0], [756.0, 3084.3333333333335], [754.0, 3077.0], [797.0, 3079.75], [799.0, 3077.0], [793.0, 3084.0], [792.0, 3074.0], [791.0, 3073.0], [790.0, 3076.0], [785.0, 3084.3333333333335], [782.0, 3091.0], [770.0, 3106.0], [768.0, 3105.0], [774.0, 3101.0], [772.0, 3103.0], [780.0, 3094.0], [778.0, 3090.3333333333335], [827.0, 3086.0], [818.0, 3097.0], [830.0, 3080.0], [829.0, 3085.25], [828.0, 3090.0], [815.0, 3097.0], [801.0, 3098.5], [800.0, 3085.0], [803.0, 3074.0], [802.0, 3086.0], [805.0, 3081.0], [804.0, 3095.0], [807.0, 3070.0], [806.0, 3097.0], [814.0, 3100.0], [810.0, 3095.0], [808.0, 3093.0], [822.0, 3095.0], [821.0, 3096.25], [819.0, 3096.0], [816.0, 3103.0], [856.0, 3063.6666666666665], [860.0, 3051.3333333333335], [862.0, 3044.0], [857.0, 3053.0], [853.0, 3084.3333333333335], [850.0, 3086.3333333333335], [847.0, 3087.0], [835.0, 3073.6666666666665], [832.0, 3075.0], [839.0, 3082.0], [838.0, 3076.6666666666665], [846.0, 3083.0], [843.0, 3080.0], [841.0, 3077.0], [893.0, 3092.0], [895.0, 3084.0], [892.0, 3094.5], [891.0, 3095.0], [889.0, 3085.3333333333335], [870.0, 3066.5], [867.0, 3044.0], [864.0, 3052.0], [875.0, 3089.0], [874.0, 3084.5], [872.0, 3088.6666666666665], [887.0, 3094.0], [886.0, 3090.0], [885.0, 3082.0], [880.0, 3093.0], [924.0, 3079.5], [926.0, 3077.6666666666665], [922.0, 3081.0], [921.0, 3077.0], [920.0, 3080.0], [902.0, 3078.0], [899.0, 3079.5], [897.0, 3080.5], [911.0, 3100.5], [909.0, 3101.5], [906.0, 3074.5], [904.0, 3074.5], [918.0, 3078.2], [917.0, 3094.0], [915.0, 3101.0], [912.0, 3076.0], [945.0, 3068.5], [957.0, 3049.0], [959.0, 3052.0], [944.0, 3071.0], [955.0, 3053.0], [954.0, 3062.75], [953.0, 3068.0], [931.0, 3068.0], [930.0, 3074.3333333333335], [928.0, 3077.0], [941.0, 3060.0], [939.0, 3063.0], [936.0, 3066.0], [951.0, 3062.0], [950.0, 3064.3333333333335], [947.0, 3066.3333333333335], [978.0, 3079.3333333333335], [986.0, 3056.0], [985.0, 3085.0], [984.0, 3071.0], [966.0, 3046.25], [963.0, 3052.5], [961.0, 3051.0], [960.0, 3056.5], [983.0, 3065.0], [982.0, 3079.0], [981.0, 3071.6666666666665], [976.0, 3067.0], [975.0, 3091.0], [973.0, 3078.5], [970.0, 3062.0], [968.0, 3089.0], [1018.0, 3090.0], [1021.0, 3085.3333333333335], [1023.0, 3087.0], [1020.0, 3112.5], [1017.0, 3093.0], [999.0, 3071.0], [998.0, 3075.0], [997.0, 3051.0], [996.0, 3053.0], [994.0, 3060.5], [1015.0, 3111.0], [1012.0, 3087.0], [1007.0, 3066.5], [1004.0, 3061.5], [1002.0, 3073.0], [1001.0, 3075.0], [1000.0, 3067.0], [1052.0, 3114.0], [1076.0, 3045.0], [1054.0, 2094.6666666666665], [1070.0, 37.12499999999999], [1050.0, 3110.0], [1048.0, 3106.0], [1044.0, 3110.2], [1042.0, 3113.0], [1040.0, 3111.0], [1062.0, 3026.0], [1064.0, 3027.0], [1082.0, 3041.0], [1072.0, 3043.0], [1038.0, 3090.0], [1036.0, 3089.0], [1028.0, 3101.0], [1024.0, 3099.5], [1098.0, 564.1666666666667], [1144.0, 3062.0], [1096.0, 3419.0], [1100.0, 3068.0], [1140.0, 3064.3333333333335], [1136.0, 3065.2], [1142.0, 3058.0], [1094.0, 54.0], [1116.0, 83.5], [1110.0, 4116.0], [1106.0, 3065.0], [1090.0, 3081.0], [1118.0, 3044.0], [1128.0, 3073.0], [1126.0, 3516.5], [1130.0, 2063.3333333333335], [1120.0, 46.0], [1134.0, 3070.0], [1132.0, 1109.6666666666665], [1146.0, 123.0], [1156.0, 801.5], [1164.0, 1176.5], [1176.0, 78.0], [1154.0, 3070.5], [1152.0, 3066.3333333333335], [1182.0, 3060.0], [1158.0, 2319.25], [1162.0, 79.0], [1200.0, 3047.5], [1206.0, 3051.0], [1208.0, 3057.0], [1214.0, 3051.6666666666665], [1188.0, 3053.0], [1194.0, 3059.0], [1198.0, 3049.0], [1166.0, 795.0], [1172.0, 113.0], [1170.0, 69.0], [1168.0, 3045.5], [1178.0, 76.5], [1174.0, 76.0], [1268.0, 16.0], [1272.0, 2477.0], [1274.0, 2073.0], [1276.0, 2327.0], [1248.0, 62.0], [1250.0, 890.0], [1252.0, 1958.0], [1278.0, 2066.6666666666665], [1256.0, 42.5], [1254.0, 915.0], [1266.0, 3083.0], [1264.0, 630.875], [1220.0, 3050.3333333333335], [1222.0, 1601.5], [1226.0, 3057.0], [1224.0, 3045.0], [1230.0, 1595.5], [1246.0, 1326.3333333333335], [1244.0, 323.3333333333333], [1242.0, 908.6666666666666], [1240.0, 2087.0], [1238.0, 1232.6], [1236.0, 121.5], [1234.0, 130.0], [1232.0, 121.0], [1262.0, 45.5], [1260.0, 29.5], [1258.0, 26.5], [1286.0, 71.0], [1338.0, 819.0], [1320.0, 1106.0], [1288.0, 1829.5], [1284.0, 71.0], [1282.0, 2322.75], [1280.0, 2071.6666666666665], [1310.0, 796.75], [1308.0, 2038.6666666666667], [1306.0, 3049.6666666666665], [1304.0, 50.75], [1302.0, 44.0], [1300.0, 54.0], [1298.0, 61.0], [1296.0, 61.0], [1340.0, 60.0], [1342.0, 67.0], [1312.0, 2046.3333333333333], [1314.0, 59.0], [1316.0, 1444.3333333333335], [1318.0, 1557.5], [1322.0, 1588.0], [1324.0, 76.0], [1326.0, 1587.5], [1336.0, 2323.75], [1334.0, 3097.0], [1332.0, 69.5], [1330.0, 70.0], [1328.0, 426.0], [1294.0, 63.0], [1292.0, 2064.3333333333335], [1290.0, 66.0], [1404.0, 136.33333333333334], [1350.0, 541.1666666666667], [1370.0, 47.0], [1390.0, 90.5], [1388.0, 107.33333333333333], [1384.0, 78.66666666666667], [1382.0, 70.0], [1380.0, 58.5], [1376.0, 76.0], [1406.0, 214.0], [1400.0, 131.0], [1398.0, 108.0], [1396.0, 106.0], [1358.0, 552.5], [1356.0, 45.5], [1354.0, 218.5], [1352.0, 335.7142857142857], [1374.0, 61.0], [1372.0, 66.5], [1344.0, 67.0], [1348.0, 71.0], [1346.0, 2066.5], [1368.0, 558.5], [1366.0, 748.3333333333334], [1364.0, 1113.5], [1362.0, 294.0], [1360.0, 50.5], [1420.0, 212.0], [1442.0, 25.0], [1434.0, 361.25], [1430.0, 73.0], [1428.0, 127.0], [1424.0, 196.0], [1416.0, 208.33333333333334], [1418.0, 211.0], [1470.0, 83.25], [1446.0, 81.83333333333334], [1448.0, 25.0], [1450.0, 113.0], [1454.0, 106.0], [1452.0, 112.0], [1458.0, 37.0], [1422.0, 207.0], [1460.0, 105.66666666666667], [1462.0, 75.5], [1468.0, 38.0], [1478.0, 96.0], [1480.0, 71.5], [1498.0, 62.0], [1472.0, 46.0], [1502.0, 67.66666666666667], [1500.0, 67.5], [1476.0, 94.0], [1474.0, 90.0], [1486.0, 87.0], [1484.0, 91.0], [1482.0, 97.0], [1512.0, 72.0], [1510.0, 60.0], [1508.0, 94.0], [1506.0, 91.0], [1504.0, 79.0], [1528.0, 62.0], [1526.0, 79.0], [1488.0, 83.0], [1490.0, 80.0], [1492.0, 80.0], [1496.0, 135.33333333333334], [1494.0, 67.66666666666667], [1085.0, 3037.6666666666665], [1071.0, 2142.8], [1053.0, 44.16666666666667], [1051.0, 3115.0], [1087.0, 3034.4], [1059.0, 3106.6666666666665], [1057.0, 3113.5], [1061.0, 3109.0], [1063.0, 3021.0], [1081.0, 3041.0], [1079.0, 3033.0], [1075.0, 4217.0], [1039.0, 3115.0], [1037.0, 3109.0], [1033.0, 3088.0], [1031.0, 3104.285714285714], [1027.0, 3125.0], [1025.0, 3107.0], [1115.0, 3054.6666666666665], [1125.0, 839.25], [1103.0, 3413.6666666666665], [1143.0, 3062.0], [1113.0, 3062.5], [1111.0, 4125.0], [1109.0, 3057.0], [1107.0, 3416.6666666666665], [1105.0, 3060.0], [1117.0, 3052.5], [1093.0, 1583.0], [1129.0, 171.33333333333334], [1149.0, 3072.6666666666665], [1147.0, 3076.0], [1133.0, 609.1666666666666], [1131.0, 3063.0], [1145.0, 1673.5], [1159.0, 80.0], [1157.0, 256.8], [1183.0, 3052.0], [1181.0, 3029.0], [1161.0, 2064.333333333333], [1165.0, 72.5], [1167.0, 68.5], [1205.0, 3058.0], [1203.0, 3050.0], [1207.0, 3057.0], [1209.0, 3043.5], [1185.0, 3058.5], [1187.0, 3055.5], [1213.0, 3054.0], [1191.0, 1849.2], [1195.0, 3049.0], [1189.0, 32.5], [1173.0, 859.0], [1171.0, 646.0], [1169.0, 75.0], [1179.0, 69.0], [1177.0, 3031.0], [1175.0, 2546.1666666666665], [1269.0, 1343.7142857142858], [1253.0, 172.5], [1259.0, 33.0], [1273.0, 1048.3333333333335], [1271.0, 54.0], [1275.0, 52.0], [1277.0, 65.0], [1279.0, 62.0], [1249.0, 896.0], [1251.0, 2673.5], [1255.0, 881.0], [1267.0, 620.5], [1265.0, 1568.0], [1247.0, 895.0], [1217.0, 3053.5], [1221.0, 138.0], [1227.0, 2073.6666666666665], [1225.0, 3052.0], [1223.0, 2079.5], [1231.0, 3054.3333333333335], [1229.0, 138.0], [1245.0, 2010.8], [1243.0, 392.95833333333326], [1239.0, 1532.5], [1241.0, 506.16666666666674], [1237.0, 3048.5], [1235.0, 3053.0], [1263.0, 1182.0], [1261.0, 1683.857142857143], [1257.0, 27.5], [1339.0, 2316.5], [1289.0, 813.0], [1287.0, 1561.0], [1285.0, 2070.6666666666665], [1283.0, 1573.5], [1281.0, 57.0], [1311.0, 47.25], [1309.0, 1034.3333333333335], [1307.0, 48.0], [1305.0, 36.0], [1301.0, 1539.5], [1303.0, 2437.3333333333335], [1299.0, 2050.3333333333335], [1297.0, 3041.0], [1341.0, 32.375], [1343.0, 3059.6666666666665], [1313.0, 46.0], [1315.0, 2300.75], [1317.0, 84.0], [1319.0, 827.5], [1321.0, 79.0], [1323.0, 2109.0], [1325.0, 73.0], [1327.0, 1192.9], [1335.0, 70.5], [1333.0, 1577.5], [1331.0, 2104.8], [1329.0, 73.0], [1295.0, 2055.6666666666665], [1293.0, 63.0], [1291.0, 1559.0], [1401.0, 159.0], [1385.0, 71.0], [1383.0, 34.0], [1381.0, 75.0], [1379.0, 11.0], [1377.0, 92.0], [1407.0, 205.0], [1405.0, 177.0], [1397.0, 106.0], [1395.0, 107.66666666666667], [1393.0, 100.5], [1359.0, 291.25], [1357.0, 543.75], [1355.0, 378.3333333333333], [1353.0, 378.4], [1351.0, 27.0], [1371.0, 17.0], [1375.0, 77.0], [1349.0, 3060.0], [1369.0, 68.0], [1367.0, 562.0], [1365.0, 22.0], [1363.0, 43.5], [1361.0, 537.5], [1439.0, 56.0], [1465.0, 43.0], [1421.0, 649.5], [1431.0, 39.0], [1429.0, 109.0], [1427.0, 131.0], [1425.0, 129.0], [1411.0, 192.0], [1409.0, 201.5], [1413.0, 195.5], [1437.0, 48.0], [1441.0, 1173.0], [1471.0, 42.0], [1447.0, 68.0], [1445.0, 87.0], [1443.0, 70.0], [1449.0, 54.0], [1451.0, 40.75], [1455.0, 106.0], [1457.0, 105.0], [1423.0, 206.0], [1463.0, 45.0], [1467.0, 42.0], [1477.0, 87.0], [1473.0, 79.5], [1503.0, 64.0], [1501.0, 74.0], [1497.0, 63.0], [1479.0, 58.75], [1475.0, 92.0], [1487.0, 69.0], [1485.0, 88.0], [1483.0, 95.0], [1481.0, 187.0], [1521.0, 81.66666666666667], [1515.0, 63.0], [1511.0, 64.0], [1509.0, 61.5], [1505.0, 77.0], [1519.0, 74.0], [1517.0, 42.0], [1525.0, 69.0], [1527.0, 84.5], [1523.0, 79.5], [1489.0, 182.5], [1491.0, 79.0], [1495.0, 63.5], [1.0, 21057.0]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users", "isController": false}, {"data": [[888.3605000000016, 6288.002]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1528.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4078.6666666666665, "minX": 1.61431944E12, "maxY": 42437.666666666664, "series": [{"data": [[1.61431944E12, 42437.666666666664]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61431944E12, 4078.6666666666665]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61431944E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 935.5714285714284, "minX": 1.61431944E12, "maxY": 6288.002, "series": [{"data": [[1.61431944E12, 4093.464285714285]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-0", "isController": false}, {"data": [[1.61431944E12, 935.5714285714284]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-1", "isController": false}, {"data": [[1.61431944E12, 6288.002]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61431944E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 559.0535714285714, "minX": 1.61431944E12, "maxY": 4093.446428571429, "series": [{"data": [[1.61431944E12, 4093.446428571429]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-0", "isController": false}, {"data": [[1.61431944E12, 559.0535714285714]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-1", "isController": false}, {"data": [[1.61431944E12, 2573.846499999999]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61431944E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 898.5535714285714, "minX": 1.61431944E12, "maxY": 6234.375499999996, "series": [{"data": [[1.61431944E12, 3951.750000000001]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-0", "isController": false}, {"data": [[1.61431944E12, 898.5535714285714]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-1", "isController": false}, {"data": [[1.61431944E12, 6234.375499999996]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61431944E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.61431944E12, "maxY": 10822.0, "series": [{"data": [[1.61431944E12, 10822.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61431944E12, 9078.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61431944E12, 9150.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61431944E12, 9093.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61431944E12, 11.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61431944E12, 3053.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61431944E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 42.5, "minX": 23.0, "maxY": 21062.0, "series": [{"data": [[35.0, 1040.0], [282.0, 9078.0], [300.0, 3056.0], [72.0, 9077.5], [23.0, 6099.0], [48.0, 42.5], [198.0, 80.0], [395.0, 3085.0], [407.0, 65.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[352.0, 21062.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 407.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 23.0, "maxY": 9077.0, "series": [{"data": [[35.0, 1039.0], [282.0, 9077.0], [300.0, 3055.5], [72.0, 9075.5], [23.0, 6097.0], [48.0, 42.5], [198.0, 80.0], [395.0, 3084.0], [407.0, 65.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[352.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 407.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 35.2, "minX": 1.61431944E12, "maxY": 35.2, "series": [{"data": [[1.61431944E12, 35.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61431944E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.9333333333333333, "minX": 1.61431944E12, "maxY": 28.4, "series": [{"data": [[1.61431944E12, 28.4]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61431944E12, 0.9333333333333333]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.61431944E12, 5.866666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61431944E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61431944E12, "maxY": 27.483333333333334, "series": [{"data": [[1.61431944E12, 0.016666666666666666]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-1-failure", "isController": false}, {"data": [[1.61431944E12, 0.9166666666666666]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-1-success", "isController": false}, {"data": [[1.61431944E12, 5.85]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-failure", "isController": false}, {"data": [[1.61431944E12, 0.9333333333333333]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-0-success", "isController": false}, {"data": [[1.61431944E12, 27.483333333333334]], "isOverall": false, "label": "Request to Gioi Thieu Truong 2000 Users-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61431944E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 5.866666666666666, "minX": 1.61431944E12, "maxY": 29.333333333333332, "series": [{"data": [[1.61431944E12, 29.333333333333332]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61431944E12, 5.866666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61431944E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

